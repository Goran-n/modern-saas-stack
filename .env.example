# ============================================================================
# Kibly Environment Configuration
# ============================================================================
# Copy this file to .env and update the values for your environment
# All variables are validated by @kibly/config package

# ============================================================================
# CORE SYSTEM CONFIGURATION
# ============================================================================

# Environment (development, production, test)
NODE_ENV=development

# Logging level (error, warn, info, debug, etc.)
LOG_LEVEL=info

# Default application port
PORT=5000

# Host for services to bind to
HOST=localhost

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL connection string (REQUIRED)
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://postgres:password@localhost:5432/kibly_dev

# ============================================================================
# SUPABASE CONFIGURATION
# ============================================================================

# Supabase project URL (REQUIRED)
# Get this from your Supabase project settings
SUPABASE_URL=https://your-project-ref.supabase.co

# Supabase anonymous key (REQUIRED)
# Get this from your Supabase project API settings
SUPABASE_ANON_KEY=your-anon-key-here

# Supabase service role key (OPTIONAL - for server-side operations)
# Only use this for server-side operations that need elevated permissions
SUPABASE_SERVICE_KEY=your-service-role-key-here

# ============================================================================
# AUTHENTICATION CONFIGURATION
# ============================================================================

# JWT secret for token signing (REQUIRED - minimum 32 characters)
# Generate a secure random string for production
JWT_SECRET=development-jwt-secret-change-in-production-32-chars-minimum

# JWT token expiration (default: 7d in development, 1h in production)
JWT_EXPIRES_IN=7d

# JWT refresh token expiration (default: 30d in development, 7d in production)  
JWT_REFRESH_EXPIRES_IN=30d

# ============================================================================
# REDIS CONFIGURATION (OPTIONAL)
# ============================================================================

# Redis host (default: localhost)
REDIS_HOST=localhost

# Redis port (default: 6379)
REDIS_PORT=6379

# Redis username (optional)
REDIS_USER=

# Redis password (optional)
REDIS_PASSWORD=

# Enable TLS for Redis (default: false in development, true in production)
REDIS_TLS=false

# Redis database number (default: 0)
REDIS_DB=0

# Redis connection timeout in milliseconds (default: 5000)
REDIS_TIMEOUT=5000

# ============================================================================
# WEB APPLICATION CONFIGURATION
# ============================================================================

# Web application port (default: 4000)
WEB_PORT=4000

# API URL for the web application (default: http://localhost:5001)
API_URL=http://localhost:5001

# Enable development mode features (default: true in development)
DEV_MODE=true

# ============================================================================
# TRIGGER.DEV CONFIGURATION (REQUIRED FOR BACKGROUND JOBS)
# ============================================================================

# Trigger.dev project ID (get from Trigger.dev dashboard)
TRIGGER_PROJECT_ID=

# Trigger.dev API key (get from Trigger.dev dashboard)
TRIGGER_API_KEY=

# Trigger.dev API URL (default: https://api.trigger.dev)
TRIGGER_API_URL=https://api.trigger.dev

# ============================================================================
# LEGACY/DOPPLER CONFIGURATION (OPTIONAL)
# ============================================================================
# These are maintained for backward compatibility with existing setup

# Legacy JWT configuration (use JWT_SECRET instead)
# JWT_KEY="your-supabase-jwt-secret-key"
# JWT_ISSUER="https://your-project-ref.supabase.co/auth/v1"

# CORS configuration
# CORS_ORIGIN="http://localhost:5173"
# CORS_CREDENTIALS="true"

# Frontend Environment Variables (use SUPABASE_* variables instead)
# VITE_SUPABASE_URL="https://your-project-ref.supabase.co"
# VITE_SUPABASE_ANON_KEY="your-supabase-anon-public-key"
# VITE_APP_NAME="Kibly"
# VITE_APP_URL="http://localhost:5173"

# Provider OAuth Credentials (configure in doppler for security)
# XERO_CLIENT_ID=your-xero-client-id
# XERO_CLIENT_SECRET=your-xero-client-secret
# QUICKBOOKS_CLIENT_ID=your-quickbooks-client-id
# QUICKBOOKS_CLIENT_SECRET=your-quickbooks-client-secret

# ============================================================================
# DEVELOPMENT NOTES
# ============================================================================
# 
# 1. Copy this file to .env: cp .env.example .env
# 2. Update the values above for your local environment
# 3. Never commit your .env file to version control
# 4. Use separate .env files for different environments
# 
# Required for basic functionality:
# - DATABASE_URL
# - SUPABASE_URL  
# - SUPABASE_ANON_KEY
# - JWT_SECRET (minimum 32 characters)
#
# Configuration validation happens at application startup
# Check logs for detailed validation errors if startup fails
#
# Note: Sensitive values like DATABASE_URL, JWT_SECRET, and OAuth credentials
# should be configured in Doppler for production environments
# Use: doppler run -- [command] to inject secrets
# ============================================================================