var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{z as defineComponent,f as ref,r as reactive,A as onMounted,y as watch,O as createElementBlock,a2 as createBaseVNode,X as createVNode,W as withCtx,G as unref,T as Transition,L as Fragment,aa as useRouter,P as openBlock,V as createBlock,a4 as createTextVNode,a8 as renderList,a3 as toDisplayString,a5 as createCommentVNode,ah as withKeys,a6 as withModifiers}from"./BRSJK7Xo.js";import AddressSection from"./DLOuVGAy.js";import{f as useTrpc,e as useTenantStore}from"./BGn8T2aB.js";import{_ as _sfc_main$3}from"./hXgEKzhh.js";import{_ as _sfc_main$8}from"./CEfzLdwR.js";import{_ as _sfc_main$1}from"./DIbFRL3M.js";import{_ as _sfc_main$4}from"./rIxWFMco.js";import{_ as _sfc_main$a}from"./BeaoTUGu.js";import{_ as _sfc_main$6}from"./DGo9Esvu.js";import{_ as _sfc_main$7}from"./Dlem1RG-.js";import{_ as _sfc_main$2}from"./DqfWNI9s.js";import{_ as _sfc_main$5,a as _sfc_main$9}from"./CaaFlUxj.js";import{u as useToast}from"./DOQLo0N3.js";import{u as useDebounceFn}from"./CDtqPBeL.js";import"./B8R4opHw.js";import"./LqpTdS2-.js";import"./CKrwGQ3G.js";var util;(function(util2){util2.assertEqual=_=>{};function assertIs(_arg){}__name(assertIs,"assertIs"),util2.assertIs=assertIs;function assertNever(_x){throw new Error}__name(assertNever,"assertNever"),util2.assertNever=assertNever,util2.arrayToEnum=items=>{const obj={};for(const item of items)obj[item]=item;return obj},util2.getValidEnumValues=obj=>{const validKeys=util2.objectKeys(obj).filter(k=>typeof obj[obj[k]]!="number"),filtered={};for(const k of validKeys)filtered[k]=obj[k];return util2.objectValues(filtered)},util2.objectValues=obj=>util2.objectKeys(obj).map(function(e){return obj[e]}),util2.objectKeys=typeof Object.keys=="function"?obj=>Object.keys(obj):object=>{const keys=[];for(const key in object)Object.prototype.hasOwnProperty.call(object,key)&&keys.push(key);return keys},util2.find=(arr,checker)=>{for(const item of arr)if(checker(item))return item},util2.isInteger=typeof Number.isInteger=="function"?val=>Number.isInteger(val):val=>typeof val=="number"&&Number.isFinite(val)&&Math.floor(val)===val;function joinValues(array,separator=" | "){return array.map(val=>typeof val=="string"?`'${val}'`:val).join(separator)}__name(joinValues,"joinValues"),util2.joinValues=joinValues,util2.jsonStringifyReplacer=(_,value)=>typeof value=="bigint"?value.toString():value})(util||(util={}));var objectUtil;(function(objectUtil2){objectUtil2.mergeShapes=(first,second)=>({...first,...second})})(objectUtil||(objectUtil={}));const ZodParsedType=util.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),getParsedType=__name(data=>{switch(typeof data){case"undefined":return ZodParsedType.undefined;case"string":return ZodParsedType.string;case"number":return Number.isNaN(data)?ZodParsedType.nan:ZodParsedType.number;case"boolean":return ZodParsedType.boolean;case"function":return ZodParsedType.function;case"bigint":return ZodParsedType.bigint;case"symbol":return ZodParsedType.symbol;case"object":return Array.isArray(data)?ZodParsedType.array:data===null?ZodParsedType.null:data.then&&typeof data.then=="function"&&data.catch&&typeof data.catch=="function"?ZodParsedType.promise:typeof Map<"u"&&data instanceof Map?ZodParsedType.map:typeof Set<"u"&&data instanceof Set?ZodParsedType.set:typeof Date<"u"&&data instanceof Date?ZodParsedType.date:ZodParsedType.object;default:return ZodParsedType.unknown}},"getParsedType"),ZodIssueCode=util.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),_ZodError=class _ZodError extends Error{get errors(){return this.issues}constructor(issues){super(),this.issues=[],this.addIssue=sub=>{this.issues=[...this.issues,sub]},this.addIssues=(subs=[])=>{this.issues=[...this.issues,...subs]};const actualProto=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,actualProto):this.__proto__=actualProto,this.name="ZodError",this.issues=issues}format(_mapper){const mapper=_mapper||function(issue){return issue.message},fieldErrors={_errors:[]},processError=__name(error=>{for(const issue of error.issues)if(issue.code==="invalid_union")issue.unionErrors.map(processError);else if(issue.code==="invalid_return_type")processError(issue.returnTypeError);else if(issue.code==="invalid_arguments")processError(issue.argumentsError);else if(issue.path.length===0)fieldErrors._errors.push(mapper(issue));else{let curr=fieldErrors,i=0;for(;i<issue.path.length;){const el=issue.path[i];i===issue.path.length-1?(curr[el]=curr[el]||{_errors:[]},curr[el]._errors.push(mapper(issue))):curr[el]=curr[el]||{_errors:[]},curr=curr[el],i++}}},"processError");return processError(this),fieldErrors}static assert(value){if(!(value instanceof _ZodError))throw new Error(`Not a ZodError: ${value}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,util.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(mapper=issue=>issue.message){const fieldErrors={},formErrors=[];for(const sub of this.issues)if(sub.path.length>0){const firstEl=sub.path[0];fieldErrors[firstEl]=fieldErrors[firstEl]||[],fieldErrors[firstEl].push(mapper(sub))}else formErrors.push(mapper(sub));return{formErrors,fieldErrors}}get formErrors(){return this.flatten()}};__name(_ZodError,"ZodError");let ZodError=_ZodError;ZodError.create=issues=>new ZodError(issues);const errorMap=__name((issue,_ctx)=>{let message;switch(issue.code){case ZodIssueCode.invalid_type:issue.received===ZodParsedType.undefined?message="Required":message=`Expected ${issue.expected}, received ${issue.received}`;break;case ZodIssueCode.invalid_literal:message=`Invalid literal value, expected ${JSON.stringify(issue.expected,util.jsonStringifyReplacer)}`;break;case ZodIssueCode.unrecognized_keys:message=`Unrecognized key(s) in object: ${util.joinValues(issue.keys,", ")}`;break;case ZodIssueCode.invalid_union:message="Invalid input";break;case ZodIssueCode.invalid_union_discriminator:message=`Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;break;case ZodIssueCode.invalid_enum_value:message=`Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;break;case ZodIssueCode.invalid_arguments:message="Invalid function arguments";break;case ZodIssueCode.invalid_return_type:message="Invalid function return type";break;case ZodIssueCode.invalid_date:message="Invalid date";break;case ZodIssueCode.invalid_string:typeof issue.validation=="object"?"includes"in issue.validation?(message=`Invalid input: must include "${issue.validation.includes}"`,typeof issue.validation.position=="number"&&(message=`${message} at one or more positions greater than or equal to ${issue.validation.position}`)):"startsWith"in issue.validation?message=`Invalid input: must start with "${issue.validation.startsWith}"`:"endsWith"in issue.validation?message=`Invalid input: must end with "${issue.validation.endsWith}"`:util.assertNever(issue.validation):issue.validation!=="regex"?message=`Invalid ${issue.validation}`:message="Invalid";break;case ZodIssueCode.too_small:issue.type==="array"?message=`Array must contain ${issue.exact?"exactly":issue.inclusive?"at least":"more than"} ${issue.minimum} element(s)`:issue.type==="string"?message=`String must contain ${issue.exact?"exactly":issue.inclusive?"at least":"over"} ${issue.minimum} character(s)`:issue.type==="number"?message=`Number must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${issue.minimum}`:issue.type==="bigint"?message=`Number must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${issue.minimum}`:issue.type==="date"?message=`Date must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(issue.minimum))}`:message="Invalid input";break;case ZodIssueCode.too_big:issue.type==="array"?message=`Array must contain ${issue.exact?"exactly":issue.inclusive?"at most":"less than"} ${issue.maximum} element(s)`:issue.type==="string"?message=`String must contain ${issue.exact?"exactly":issue.inclusive?"at most":"under"} ${issue.maximum} character(s)`:issue.type==="number"?message=`Number must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:issue.type==="bigint"?message=`BigInt must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:issue.type==="date"?message=`Date must be ${issue.exact?"exactly":issue.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(issue.maximum))}`:message="Invalid input";break;case ZodIssueCode.custom:message="Invalid input";break;case ZodIssueCode.invalid_intersection_types:message="Intersection results could not be merged";break;case ZodIssueCode.not_multiple_of:message=`Number must be a multiple of ${issue.multipleOf}`;break;case ZodIssueCode.not_finite:message="Number must be finite";break;default:message=_ctx.defaultError,util.assertNever(issue)}return{message}},"errorMap");let overrideErrorMap=errorMap;function getErrorMap(){return overrideErrorMap}__name(getErrorMap,"getErrorMap");const makeIssue=__name(params=>{const{data,path,errorMaps,issueData}=params,fullPath=[...path,...issueData.path||[]],fullIssue={...issueData,path:fullPath};if(issueData.message!==void 0)return{...issueData,path:fullPath,message:issueData.message};let errorMessage="";const maps=errorMaps.filter(m=>!!m).slice().reverse();for(const map of maps)errorMessage=map(fullIssue,{data,defaultError:errorMessage}).message;return{...issueData,path:fullPath,message:errorMessage}},"makeIssue");function addIssueToContext(ctx,issueData){const overrideMap=getErrorMap(),issue=makeIssue({issueData,data:ctx.data,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,overrideMap,overrideMap===errorMap?void 0:errorMap].filter(x=>!!x)});ctx.common.issues.push(issue)}__name(addIssueToContext,"addIssueToContext");const _ParseStatus=class _ParseStatus{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(status,results){const arrayValue=[];for(const s of results){if(s.status==="aborted")return INVALID;s.status==="dirty"&&status.dirty(),arrayValue.push(s.value)}return{status:status.value,value:arrayValue}}static async mergeObjectAsync(status,pairs){const syncPairs=[];for(const pair of pairs){const key=await pair.key,value=await pair.value;syncPairs.push({key,value})}return _ParseStatus.mergeObjectSync(status,syncPairs)}static mergeObjectSync(status,pairs){const finalObject={};for(const pair of pairs){const{key,value}=pair;if(key.status==="aborted"||value.status==="aborted")return INVALID;key.status==="dirty"&&status.dirty(),value.status==="dirty"&&status.dirty(),key.value!=="__proto__"&&(typeof value.value<"u"||pair.alwaysSet)&&(finalObject[key.value]=value.value)}return{status:status.value,value:finalObject}}};__name(_ParseStatus,"ParseStatus");let ParseStatus=_ParseStatus;const INVALID=Object.freeze({status:"aborted"}),DIRTY=__name(value=>({status:"dirty",value}),"DIRTY"),OK=__name(value=>({status:"valid",value}),"OK"),isAborted=__name(x=>x.status==="aborted","isAborted"),isDirty=__name(x=>x.status==="dirty","isDirty"),isValid=__name(x=>x.status==="valid","isValid"),isAsync=__name(x=>typeof Promise<"u"&&x instanceof Promise,"isAsync");var errorUtil;(function(errorUtil2){errorUtil2.errToObj=message=>typeof message=="string"?{message}:message||{},errorUtil2.toString=message=>typeof message=="string"?message:message?.message})(errorUtil||(errorUtil={}));const _ParseInputLazyPath=class _ParseInputLazyPath{constructor(parent,value,path,key){this._cachedPath=[],this.parent=parent,this.data=value,this._path=path,this._key=key}get path(){return this._cachedPath.length||(Array.isArray(this._key)?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}};__name(_ParseInputLazyPath,"ParseInputLazyPath");let ParseInputLazyPath=_ParseInputLazyPath;const handleResult=__name((ctx,result)=>{if(isValid(result))return{success:!0,data:result.value};if(!ctx.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const error=new ZodError(ctx.common.issues);return this._error=error,this._error}}},"handleResult");function processCreateParams(params){if(!params)return{};const{errorMap:errorMap2,invalid_type_error,required_error,description}=params;if(errorMap2&&(invalid_type_error||required_error))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return errorMap2?{errorMap:errorMap2,description}:{errorMap:__name((iss,ctx)=>{const{message}=params;return iss.code==="invalid_enum_value"?{message:message??ctx.defaultError}:typeof ctx.data>"u"?{message:message??required_error??ctx.defaultError}:iss.code!=="invalid_type"?{message:ctx.defaultError}:{message:message??invalid_type_error??ctx.defaultError}},"customMap"),description}}__name(processCreateParams,"processCreateParams");const _ZodType=class _ZodType{get description(){return this._def.description}_getType(input){return getParsedType(input.data)}_getOrReturnCtx(input,ctx){return ctx||{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}_processInputParams(input){return{status:new ParseStatus,ctx:{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}}_parseSync(input){const result=this._parse(input);if(isAsync(result))throw new Error("Synchronous parse encountered promise.");return result}_parseAsync(input){const result=this._parse(input);return Promise.resolve(result)}parse(data,params){const result=this.safeParse(data,params);if(result.success)return result.data;throw result.error}safeParse(data,params){const ctx={common:{issues:[],async:params?.async??!1,contextualErrorMap:params?.errorMap},path:params?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},result=this._parseSync({data,path:ctx.path,parent:ctx});return handleResult(ctx,result)}"~validate"(data){const ctx={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)};if(!this["~standard"].async)try{const result=this._parseSync({data,path:[],parent:ctx});return isValid(result)?{value:result.value}:{issues:ctx.common.issues}}catch(err){err?.message?.toLowerCase()?.includes("encountered")&&(this["~standard"].async=!0),ctx.common={issues:[],async:!0}}return this._parseAsync({data,path:[],parent:ctx}).then(result=>isValid(result)?{value:result.value}:{issues:ctx.common.issues})}async parseAsync(data,params){const result=await this.safeParseAsync(data,params);if(result.success)return result.data;throw result.error}async safeParseAsync(data,params){const ctx={common:{issues:[],contextualErrorMap:params?.errorMap,async:!0},path:params?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},maybeAsyncResult=this._parse({data,path:ctx.path,parent:ctx}),result=await(isAsync(maybeAsyncResult)?maybeAsyncResult:Promise.resolve(maybeAsyncResult));return handleResult(ctx,result)}refine(check,message){const getIssueProperties=__name(val=>typeof message=="string"||typeof message>"u"?{message}:typeof message=="function"?message(val):message,"getIssueProperties");return this._refinement((val,ctx)=>{const result=check(val),setError=__name(()=>ctx.addIssue({code:ZodIssueCode.custom,...getIssueProperties(val)}),"setError");return typeof Promise<"u"&&result instanceof Promise?result.then(data=>data?!0:(setError(),!1)):result?!0:(setError(),!1)})}refinement(check,refinementData){return this._refinement((val,ctx)=>check(val)?!0:(ctx.addIssue(typeof refinementData=="function"?refinementData(val,ctx):refinementData),!1))}_refinement(refinement){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"refinement",refinement}})}superRefine(refinement){return this._refinement(refinement)}constructor(def){this.spa=this.safeParseAsync,this._def=def,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:__name(data=>this["~validate"](data),"validate")}}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this)}promise(){return ZodPromise.create(this,this._def)}or(option){return ZodUnion.create([this,option],this._def)}and(incoming){return ZodIntersection.create(this,incoming,this._def)}transform(transform){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:ZodFirstPartyTypeKind.ZodEffects,effect:{type:"transform",transform}})}default(def){const defaultValueFunc=typeof def=="function"?def:()=>def;return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:defaultValueFunc,typeName:ZodFirstPartyTypeKind.ZodDefault})}brand(){return new ZodBranded({typeName:ZodFirstPartyTypeKind.ZodBranded,type:this,...processCreateParams(this._def)})}catch(def){const catchValueFunc=typeof def=="function"?def:()=>def;return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:catchValueFunc,typeName:ZodFirstPartyTypeKind.ZodCatch})}describe(description){const This=this.constructor;return new This({...this._def,description})}pipe(target){return ZodPipeline.create(this,target)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}};__name(_ZodType,"ZodType");let ZodType=_ZodType;const cuidRegex=/^c[^\s-]{8,}$/i,cuid2Regex=/^[0-9a-z]+$/,ulidRegex=/^[0-9A-HJKMNP-TV-Z]{26}$/i,uuidRegex=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,nanoidRegex=/^[a-z0-9_-]{21}$/i,jwtRegex=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,durationRegex=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,emailRegex=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,_emojiRegex="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";let emojiRegex;const ipv4Regex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,ipv4CidrRegex=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,ipv6Regex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,ipv6CidrRegex=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,base64Regex=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,base64urlRegex=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,dateRegexSource="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",dateRegex=new RegExp(`^${dateRegexSource}$`);function timeRegexSource(args){let secondsRegexSource="[0-5]\\d";args.precision?secondsRegexSource=`${secondsRegexSource}\\.\\d{${args.precision}}`:args.precision==null&&(secondsRegexSource=`${secondsRegexSource}(\\.\\d+)?`);const secondsQuantifier=args.precision?"+":"?";return`([01]\\d|2[0-3]):[0-5]\\d(:${secondsRegexSource})${secondsQuantifier}`}__name(timeRegexSource,"timeRegexSource");function timeRegex(args){return new RegExp(`^${timeRegexSource(args)}$`)}__name(timeRegex,"timeRegex");function datetimeRegex(args){let regex=`${dateRegexSource}T${timeRegexSource(args)}`;const opts=[];return opts.push(args.local?"Z?":"Z"),args.offset&&opts.push("([+-]\\d{2}:?\\d{2})"),regex=`${regex}(${opts.join("|")})`,new RegExp(`^${regex}$`)}__name(datetimeRegex,"datetimeRegex");function isValidIP(ip,version){return!!((version==="v4"||!version)&&ipv4Regex.test(ip)||(version==="v6"||!version)&&ipv6Regex.test(ip))}__name(isValidIP,"isValidIP");function isValidJWT(jwt,alg){if(!jwtRegex.test(jwt))return!1;try{const[header]=jwt.split(".");if(!header)return!1;const base64=header.replace(/-/g,"+").replace(/_/g,"/").padEnd(header.length+(4-header.length%4)%4,"="),decoded=JSON.parse(atob(base64));return!(typeof decoded!="object"||decoded===null||"typ"in decoded&&decoded?.typ!=="JWT"||!decoded.alg||alg&&decoded.alg!==alg)}catch{return!1}}__name(isValidJWT,"isValidJWT");function isValidCidr(ip,version){return!!((version==="v4"||!version)&&ipv4CidrRegex.test(ip)||(version==="v6"||!version)&&ipv6CidrRegex.test(ip))}__name(isValidCidr,"isValidCidr");const _ZodString=class _ZodString extends ZodType{_parse(input){if(this._def.coerce&&(input.data=String(input.data)),this._getType(input)!==ZodParsedType.string){const ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.string,received:ctx2.parsedType}),INVALID}const status=new ParseStatus;let ctx;for(const check of this._def.checks)if(check.kind==="min")input.data.length<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if(check.kind==="max")input.data.length>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if(check.kind==="length"){const tooBig=input.data.length>check.value,tooSmall=input.data.length<check.value;(tooBig||tooSmall)&&(ctx=this._getOrReturnCtx(input,ctx),tooBig?addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}):tooSmall&&addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}),status.dirty())}else if(check.kind==="email")emailRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"email",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="emoji")emojiRegex||(emojiRegex=new RegExp(_emojiRegex,"u")),emojiRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"emoji",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="uuid")uuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"uuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="nanoid")nanoidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"nanoid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="cuid")cuidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="cuid2")cuid2Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cuid2",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="ulid")ulidRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ulid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if(check.kind==="url")try{new URL(input.data)}catch{ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()}else check.kind==="regex"?(check.regex.lastIndex=0,check.regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"regex",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty())):check.kind==="trim"?input.data=input.data.trim():check.kind==="includes"?input.data.includes(check.value,check.position)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{includes:check.value,position:check.position},message:check.message}),status.dirty()):check.kind==="toLowerCase"?input.data=input.data.toLowerCase():check.kind==="toUpperCase"?input.data=input.data.toUpperCase():check.kind==="startsWith"?input.data.startsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{startsWith:check.value},message:check.message}),status.dirty()):check.kind==="endsWith"?input.data.endsWith(check.value)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:{endsWith:check.value},message:check.message}),status.dirty()):check.kind==="datetime"?datetimeRegex(check).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"datetime",message:check.message}),status.dirty()):check.kind==="date"?dateRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"date",message:check.message}),status.dirty()):check.kind==="time"?timeRegex(check).test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_string,validation:"time",message:check.message}),status.dirty()):check.kind==="duration"?durationRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"duration",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):check.kind==="ip"?isValidIP(input.data,check.version)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"ip",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):check.kind==="jwt"?isValidJWT(input.data,check.alg)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"jwt",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):check.kind==="cidr"?isValidCidr(input.data,check.version)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"cidr",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):check.kind==="base64"?base64Regex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"base64",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):check.kind==="base64url"?base64urlRegex.test(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{validation:"base64url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}_regex(regex,validation,message){return this.refinement(data=>regex.test(data),{validation,code:ZodIssueCode.invalid_string,...errorUtil.errToObj(message)})}_addCheck(check){return new _ZodString({...this._def,checks:[...this._def.checks,check]})}email(message){return this._addCheck({kind:"email",...errorUtil.errToObj(message)})}url(message){return this._addCheck({kind:"url",...errorUtil.errToObj(message)})}emoji(message){return this._addCheck({kind:"emoji",...errorUtil.errToObj(message)})}uuid(message){return this._addCheck({kind:"uuid",...errorUtil.errToObj(message)})}nanoid(message){return this._addCheck({kind:"nanoid",...errorUtil.errToObj(message)})}cuid(message){return this._addCheck({kind:"cuid",...errorUtil.errToObj(message)})}cuid2(message){return this._addCheck({kind:"cuid2",...errorUtil.errToObj(message)})}ulid(message){return this._addCheck({kind:"ulid",...errorUtil.errToObj(message)})}base64(message){return this._addCheck({kind:"base64",...errorUtil.errToObj(message)})}base64url(message){return this._addCheck({kind:"base64url",...errorUtil.errToObj(message)})}jwt(options){return this._addCheck({kind:"jwt",...errorUtil.errToObj(options)})}ip(options){return this._addCheck({kind:"ip",...errorUtil.errToObj(options)})}cidr(options){return this._addCheck({kind:"cidr",...errorUtil.errToObj(options)})}datetime(options){return typeof options=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:options}):this._addCheck({kind:"datetime",precision:typeof options?.precision>"u"?null:options?.precision,offset:options?.offset??!1,local:options?.local??!1,...errorUtil.errToObj(options?.message)})}date(message){return this._addCheck({kind:"date",message})}time(options){return typeof options=="string"?this._addCheck({kind:"time",precision:null,message:options}):this._addCheck({kind:"time",precision:typeof options?.precision>"u"?null:options?.precision,...errorUtil.errToObj(options?.message)})}duration(message){return this._addCheck({kind:"duration",...errorUtil.errToObj(message)})}regex(regex,message){return this._addCheck({kind:"regex",regex,...errorUtil.errToObj(message)})}includes(value,options){return this._addCheck({kind:"includes",value,position:options?.position,...errorUtil.errToObj(options?.message)})}startsWith(value,message){return this._addCheck({kind:"startsWith",value,...errorUtil.errToObj(message)})}endsWith(value,message){return this._addCheck({kind:"endsWith",value,...errorUtil.errToObj(message)})}min(minLength,message){return this._addCheck({kind:"min",value:minLength,...errorUtil.errToObj(message)})}max(maxLength,message){return this._addCheck({kind:"max",value:maxLength,...errorUtil.errToObj(message)})}length(len,message){return this._addCheck({kind:"length",value:len,...errorUtil.errToObj(message)})}nonempty(message){return this.min(1,errorUtil.errToObj(message))}trim(){return new _ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new _ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new _ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(ch=>ch.kind==="datetime")}get isDate(){return!!this._def.checks.find(ch=>ch.kind==="date")}get isTime(){return!!this._def.checks.find(ch=>ch.kind==="time")}get isDuration(){return!!this._def.checks.find(ch=>ch.kind==="duration")}get isEmail(){return!!this._def.checks.find(ch=>ch.kind==="email")}get isURL(){return!!this._def.checks.find(ch=>ch.kind==="url")}get isEmoji(){return!!this._def.checks.find(ch=>ch.kind==="emoji")}get isUUID(){return!!this._def.checks.find(ch=>ch.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(ch=>ch.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(ch=>ch.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(ch=>ch.kind==="cuid2")}get isULID(){return!!this._def.checks.find(ch=>ch.kind==="ulid")}get isIP(){return!!this._def.checks.find(ch=>ch.kind==="ip")}get isCIDR(){return!!this._def.checks.find(ch=>ch.kind==="cidr")}get isBase64(){return!!this._def.checks.find(ch=>ch.kind==="base64")}get isBase64url(){return!!this._def.checks.find(ch=>ch.kind==="base64url")}get minLength(){let min=null;for(const ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min}get maxLength(){let max=null;for(const ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max}};__name(_ZodString,"ZodString");let ZodString=_ZodString;ZodString.create=params=>new ZodString({checks:[],typeName:ZodFirstPartyTypeKind.ZodString,coerce:params?.coerce??!1,...processCreateParams(params)});function floatSafeRemainder(val,step){const valDecCount=(val.toString().split(".")[1]||"").length,stepDecCount=(step.toString().split(".")[1]||"").length,decCount=valDecCount>stepDecCount?valDecCount:stepDecCount,valInt=Number.parseInt(val.toFixed(decCount).replace(".","")),stepInt=Number.parseInt(step.toFixed(decCount).replace(".",""));return valInt%stepInt/10**decCount}__name(floatSafeRemainder,"floatSafeRemainder");const _ZodNumber=class _ZodNumber extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(input){if(this._def.coerce&&(input.data=Number(input.data)),this._getType(input)!==ZodParsedType.number){const ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.number,received:ctx2.parsedType}),INVALID}let ctx;const status=new ParseStatus;for(const check of this._def.checks)check.kind==="int"?util.isInteger(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:"integer",received:"float",message:check.message}),status.dirty()):check.kind==="min"?(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty()):check.kind==="max"?(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty()):check.kind==="multipleOf"?floatSafeRemainder(input.data,check.value)!==0&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):check.kind==="finite"?Number.isFinite(input.data)||(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_finite,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new _ZodNumber({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new _ZodNumber({...this._def,checks:[...this._def.checks,check]})}int(message){return this._addCheck({kind:"int",message:errorUtil.toString(message)})}positive(message){return this._addCheck({kind:"min",value:0,inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:0,inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:0,inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:0,inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value,message:errorUtil.toString(message)})}finite(message){return this._addCheck({kind:"finite",message:errorUtil.toString(message)})}safe(message){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:errorUtil.toString(message)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:errorUtil.toString(message)})}get minValue(){let min=null;for(const ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(const ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max}get isInt(){return!!this._def.checks.find(ch=>ch.kind==="int"||ch.kind==="multipleOf"&&util.isInteger(ch.value))}get isFinite(){let max=null,min=null;for(const ch of this._def.checks){if(ch.kind==="finite"||ch.kind==="int"||ch.kind==="multipleOf")return!0;ch.kind==="min"?(min===null||ch.value>min)&&(min=ch.value):ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value)}return Number.isFinite(min)&&Number.isFinite(max)}};__name(_ZodNumber,"ZodNumber");let ZodNumber=_ZodNumber;ZodNumber.create=params=>new ZodNumber({checks:[],typeName:ZodFirstPartyTypeKind.ZodNumber,coerce:params?.coerce||!1,...processCreateParams(params)});const _ZodBigInt=class _ZodBigInt extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(input){if(this._def.coerce)try{input.data=BigInt(input.data)}catch{return this._getInvalidInput(input)}if(this._getType(input)!==ZodParsedType.bigint)return this._getInvalidInput(input);let ctx;const status=new ParseStatus;for(const check of this._def.checks)check.kind==="min"?(check.inclusive?input.data<check.value:input.data<=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,type:"bigint",minimum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty()):check.kind==="max"?(check.inclusive?input.data>check.value:input.data>=check.value)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,type:"bigint",maximum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty()):check.kind==="multipleOf"?input.data%check.value!==BigInt(0)&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):util.assertNever(check);return{status:status.value,value:input.data}}_getInvalidInput(input){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.bigint,received:ctx.parsedType}),INVALID}gte(value,message){return this.setLimit("min",value,!0,errorUtil.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil.toString(message))}setLimit(kind,value,inclusive,message){return new _ZodBigInt({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil.toString(message)}]})}_addCheck(check){return new _ZodBigInt({...this._def,checks:[...this._def.checks,check]})}positive(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}negative(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:errorUtil.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:errorUtil.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value,message:errorUtil.toString(message)})}get minValue(){let min=null;for(const ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(const ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max}};__name(_ZodBigInt,"ZodBigInt");let ZodBigInt=_ZodBigInt;ZodBigInt.create=params=>new ZodBigInt({checks:[],typeName:ZodFirstPartyTypeKind.ZodBigInt,coerce:params?.coerce??!1,...processCreateParams(params)});const _ZodBoolean=class _ZodBoolean extends ZodType{_parse(input){if(this._def.coerce&&(input.data=!!input.data),this._getType(input)!==ZodParsedType.boolean){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.boolean,received:ctx.parsedType}),INVALID}return OK(input.data)}};__name(_ZodBoolean,"ZodBoolean");let ZodBoolean=_ZodBoolean;ZodBoolean.create=params=>new ZodBoolean({typeName:ZodFirstPartyTypeKind.ZodBoolean,coerce:params?.coerce||!1,...processCreateParams(params)});const _ZodDate=class _ZodDate extends ZodType{_parse(input){if(this._def.coerce&&(input.data=new Date(input.data)),this._getType(input)!==ZodParsedType.date){const ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.date,received:ctx2.parsedType}),INVALID}if(Number.isNaN(input.data.getTime())){const ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_date}),INVALID}const status=new ParseStatus;let ctx;for(const check of this._def.checks)check.kind==="min"?input.data.getTime()<check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_small,message:check.message,inclusive:!0,exact:!1,minimum:check.value,type:"date"}),status.dirty()):check.kind==="max"?input.data.getTime()>check.value&&(ctx=this._getOrReturnCtx(input,ctx),addIssueToContext(ctx,{code:ZodIssueCode.too_big,message:check.message,inclusive:!0,exact:!1,maximum:check.value,type:"date"}),status.dirty()):util.assertNever(check);return{status:status.value,value:new Date(input.data.getTime())}}_addCheck(check){return new _ZodDate({...this._def,checks:[...this._def.checks,check]})}min(minDate,message){return this._addCheck({kind:"min",value:minDate.getTime(),message:errorUtil.toString(message)})}max(maxDate,message){return this._addCheck({kind:"max",value:maxDate.getTime(),message:errorUtil.toString(message)})}get minDate(){let min=null;for(const ch of this._def.checks)ch.kind==="min"&&(min===null||ch.value>min)&&(min=ch.value);return min!=null?new Date(min):null}get maxDate(){let max=null;for(const ch of this._def.checks)ch.kind==="max"&&(max===null||ch.value<max)&&(max=ch.value);return max!=null?new Date(max):null}};__name(_ZodDate,"ZodDate");let ZodDate=_ZodDate;ZodDate.create=params=>new ZodDate({checks:[],coerce:params?.coerce||!1,typeName:ZodFirstPartyTypeKind.ZodDate,...processCreateParams(params)});const _ZodSymbol=class _ZodSymbol extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.symbol){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.symbol,received:ctx.parsedType}),INVALID}return OK(input.data)}};__name(_ZodSymbol,"ZodSymbol");let ZodSymbol=_ZodSymbol;ZodSymbol.create=params=>new ZodSymbol({typeName:ZodFirstPartyTypeKind.ZodSymbol,...processCreateParams(params)});const _ZodUndefined=class _ZodUndefined extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.undefined){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.undefined,received:ctx.parsedType}),INVALID}return OK(input.data)}};__name(_ZodUndefined,"ZodUndefined");let ZodUndefined=_ZodUndefined;ZodUndefined.create=params=>new ZodUndefined({typeName:ZodFirstPartyTypeKind.ZodUndefined,...processCreateParams(params)});const _ZodNull=class _ZodNull extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.null){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.null,received:ctx.parsedType}),INVALID}return OK(input.data)}};__name(_ZodNull,"ZodNull");let ZodNull=_ZodNull;ZodNull.create=params=>new ZodNull({typeName:ZodFirstPartyTypeKind.ZodNull,...processCreateParams(params)});const _ZodAny=class _ZodAny extends ZodType{constructor(){super(...arguments),this._any=!0}_parse(input){return OK(input.data)}};__name(_ZodAny,"ZodAny");let ZodAny=_ZodAny;ZodAny.create=params=>new ZodAny({typeName:ZodFirstPartyTypeKind.ZodAny,...processCreateParams(params)});const _ZodUnknown=class _ZodUnknown extends ZodType{constructor(){super(...arguments),this._unknown=!0}_parse(input){return OK(input.data)}};__name(_ZodUnknown,"ZodUnknown");let ZodUnknown=_ZodUnknown;ZodUnknown.create=params=>new ZodUnknown({typeName:ZodFirstPartyTypeKind.ZodUnknown,...processCreateParams(params)});const _ZodNever=class _ZodNever extends ZodType{_parse(input){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.never,received:ctx.parsedType}),INVALID}};__name(_ZodNever,"ZodNever");let ZodNever=_ZodNever;ZodNever.create=params=>new ZodNever({typeName:ZodFirstPartyTypeKind.ZodNever,...processCreateParams(params)});const _ZodVoid=class _ZodVoid extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.undefined){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.void,received:ctx.parsedType}),INVALID}return OK(input.data)}};__name(_ZodVoid,"ZodVoid");let ZodVoid=_ZodVoid;ZodVoid.create=params=>new ZodVoid({typeName:ZodFirstPartyTypeKind.ZodVoid,...processCreateParams(params)});const _ZodArray=class _ZodArray extends ZodType{_parse(input){const{ctx,status}=this._processInputParams(input),def=this._def;if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(def.exactLength!==null){const tooBig=ctx.data.length>def.exactLength.value,tooSmall=ctx.data.length<def.exactLength.value;(tooBig||tooSmall)&&(addIssueToContext(ctx,{code:tooBig?ZodIssueCode.too_big:ZodIssueCode.too_small,minimum:tooSmall?def.exactLength.value:void 0,maximum:tooBig?def.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:def.exactLength.message}),status.dirty())}if(def.minLength!==null&&ctx.data.length<def.minLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minLength.value,type:"array",inclusive:!0,exact:!1,message:def.minLength.message}),status.dirty()),def.maxLength!==null&&ctx.data.length>def.maxLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxLength.value,type:"array",inclusive:!0,exact:!1,message:def.maxLength.message}),status.dirty()),ctx.common.async)return Promise.all([...ctx.data].map((item,i)=>def.type._parseAsync(new ParseInputLazyPath(ctx,item,ctx.path,i)))).then(result2=>ParseStatus.mergeArray(status,result2));const result=[...ctx.data].map((item,i)=>def.type._parseSync(new ParseInputLazyPath(ctx,item,ctx.path,i)));return ParseStatus.mergeArray(status,result)}get element(){return this._def.type}min(minLength,message){return new _ZodArray({...this._def,minLength:{value:minLength,message:errorUtil.toString(message)}})}max(maxLength,message){return new _ZodArray({...this._def,maxLength:{value:maxLength,message:errorUtil.toString(message)}})}length(len,message){return new _ZodArray({...this._def,exactLength:{value:len,message:errorUtil.toString(message)}})}nonempty(message){return this.min(1,message)}};__name(_ZodArray,"ZodArray");let ZodArray=_ZodArray;ZodArray.create=(schema,params)=>new ZodArray({type:schema,minLength:null,maxLength:null,exactLength:null,typeName:ZodFirstPartyTypeKind.ZodArray,...processCreateParams(params)});function deepPartialify(schema){if(schema instanceof ZodObject){const newShape={};for(const key in schema.shape){const fieldSchema=schema.shape[key];newShape[key]=ZodOptional.create(deepPartialify(fieldSchema))}return new ZodObject({...schema._def,shape:__name(()=>newShape,"shape")})}else return schema instanceof ZodArray?new ZodArray({...schema._def,type:deepPartialify(schema.element)}):schema instanceof ZodOptional?ZodOptional.create(deepPartialify(schema.unwrap())):schema instanceof ZodNullable?ZodNullable.create(deepPartialify(schema.unwrap())):schema instanceof ZodTuple?ZodTuple.create(schema.items.map(item=>deepPartialify(item))):schema}__name(deepPartialify,"deepPartialify");const _ZodObject=class _ZodObject extends ZodType{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const shape=this._def.shape(),keys=util.objectKeys(shape);return this._cached={shape,keys},this._cached}_parse(input){if(this._getType(input)!==ZodParsedType.object){const ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx2.parsedType}),INVALID}const{status,ctx}=this._processInputParams(input),{shape,keys:shapeKeys}=this._getCached(),extraKeys=[];if(!(this._def.catchall instanceof ZodNever&&this._def.unknownKeys==="strip"))for(const key in ctx.data)shapeKeys.includes(key)||extraKeys.push(key);const pairs=[];for(const key of shapeKeys){const keyValidator=shape[key],value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:keyValidator._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}if(this._def.catchall instanceof ZodNever){const unknownKeys=this._def.unknownKeys;if(unknownKeys==="passthrough")for(const key of extraKeys)pairs.push({key:{status:"valid",value:key},value:{status:"valid",value:ctx.data[key]}});else if(unknownKeys==="strict")extraKeys.length>0&&(addIssueToContext(ctx,{code:ZodIssueCode.unrecognized_keys,keys:extraKeys}),status.dirty());else if(unknownKeys!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const catchall=this._def.catchall;for(const key of extraKeys){const value=ctx.data[key];pairs.push({key:{status:"valid",value:key},value:catchall._parse(new ParseInputLazyPath(ctx,value,ctx.path,key)),alwaysSet:key in ctx.data})}}return ctx.common.async?Promise.resolve().then(async()=>{const syncPairs=[];for(const pair of pairs){const key=await pair.key,value=await pair.value;syncPairs.push({key,value,alwaysSet:pair.alwaysSet})}return syncPairs}).then(syncPairs=>ParseStatus.mergeObjectSync(status,syncPairs)):ParseStatus.mergeObjectSync(status,pairs)}get shape(){return this._def.shape()}strict(message){return errorUtil.errToObj,new _ZodObject({...this._def,unknownKeys:"strict",...message!==void 0?{errorMap:__name((issue,ctx)=>{const defaultError=this._def.errorMap?.(issue,ctx).message??ctx.defaultError;return issue.code==="unrecognized_keys"?{message:errorUtil.errToObj(message).message??defaultError}:{message:defaultError}},"errorMap")}:{}})}strip(){return new _ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new _ZodObject({...this._def,unknownKeys:"passthrough"})}extend(augmentation){return new _ZodObject({...this._def,shape:__name(()=>({...this._def.shape(),...augmentation}),"shape")})}merge(merging){return new _ZodObject({unknownKeys:merging._def.unknownKeys,catchall:merging._def.catchall,shape:__name(()=>({...this._def.shape(),...merging._def.shape()}),"shape"),typeName:ZodFirstPartyTypeKind.ZodObject})}setKey(key,schema){return this.augment({[key]:schema})}catchall(index){return new _ZodObject({...this._def,catchall:index})}pick(mask){const shape={};for(const key of util.objectKeys(mask))mask[key]&&this.shape[key]&&(shape[key]=this.shape[key]);return new _ZodObject({...this._def,shape:__name(()=>shape,"shape")})}omit(mask){const shape={};for(const key of util.objectKeys(this.shape))mask[key]||(shape[key]=this.shape[key]);return new _ZodObject({...this._def,shape:__name(()=>shape,"shape")})}deepPartial(){return deepPartialify(this)}partial(mask){const newShape={};for(const key of util.objectKeys(this.shape)){const fieldSchema=this.shape[key];mask&&!mask[key]?newShape[key]=fieldSchema:newShape[key]=fieldSchema.optional()}return new _ZodObject({...this._def,shape:__name(()=>newShape,"shape")})}required(mask){const newShape={};for(const key of util.objectKeys(this.shape))if(mask&&!mask[key])newShape[key]=this.shape[key];else{let newField=this.shape[key];for(;newField instanceof ZodOptional;)newField=newField._def.innerType;newShape[key]=newField}return new _ZodObject({...this._def,shape:__name(()=>newShape,"shape")})}keyof(){return createZodEnum(util.objectKeys(this.shape))}};__name(_ZodObject,"ZodObject");let ZodObject=_ZodObject;ZodObject.create=(shape,params)=>new ZodObject({shape:__name(()=>shape,"shape"),unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});ZodObject.strictCreate=(shape,params)=>new ZodObject({shape:__name(()=>shape,"shape"),unknownKeys:"strict",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});ZodObject.lazycreate=(shape,params)=>new ZodObject({shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind.ZodObject,...processCreateParams(params)});const _ZodUnion=class _ZodUnion extends ZodType{_parse(input){const{ctx}=this._processInputParams(input),options=this._def.options;function handleResults(results){for(const result of results)if(result.result.status==="valid")return result.result;for(const result of results)if(result.result.status==="dirty")return ctx.common.issues.push(...result.ctx.common.issues),result.result;const unionErrors=results.map(result=>new ZodError(result.ctx.common.issues));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID}if(__name(handleResults,"handleResults"),ctx.common.async)return Promise.all(options.map(async option=>{const childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null};return{result:await option._parseAsync({data:ctx.data,path:ctx.path,parent:childCtx}),ctx:childCtx}})).then(handleResults);{let dirty;const issues=[];for(const option of options){const childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null},result=option._parseSync({data:ctx.data,path:ctx.path,parent:childCtx});if(result.status==="valid")return result;result.status==="dirty"&&!dirty&&(dirty={result,ctx:childCtx}),childCtx.common.issues.length&&issues.push(childCtx.common.issues)}if(dirty)return ctx.common.issues.push(...dirty.ctx.common.issues),dirty.result;const unionErrors=issues.map(issues2=>new ZodError(issues2));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID}}get options(){return this._def.options}};__name(_ZodUnion,"ZodUnion");let ZodUnion=_ZodUnion;ZodUnion.create=(types,params)=>new ZodUnion({options:types,typeName:ZodFirstPartyTypeKind.ZodUnion,...processCreateParams(params)});function mergeValues(a,b){const aType=getParsedType(a),bType=getParsedType(b);if(a===b)return{valid:!0,data:a};if(aType===ZodParsedType.object&&bType===ZodParsedType.object){const bKeys=util.objectKeys(b),sharedKeys=util.objectKeys(a).filter(key=>bKeys.indexOf(key)!==-1),newObj={...a,...b};for(const key of sharedKeys){const sharedValue=mergeValues(a[key],b[key]);if(!sharedValue.valid)return{valid:!1};newObj[key]=sharedValue.data}return{valid:!0,data:newObj}}else if(aType===ZodParsedType.array&&bType===ZodParsedType.array){if(a.length!==b.length)return{valid:!1};const newArray=[];for(let index=0;index<a.length;index++){const itemA=a[index],itemB=b[index],sharedValue=mergeValues(itemA,itemB);if(!sharedValue.valid)return{valid:!1};newArray.push(sharedValue.data)}return{valid:!0,data:newArray}}else return aType===ZodParsedType.date&&bType===ZodParsedType.date&&+a==+b?{valid:!0,data:a}:{valid:!1}}__name(mergeValues,"mergeValues");const _ZodIntersection=class _ZodIntersection extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input),handleParsed=__name((parsedLeft,parsedRight)=>{if(isAborted(parsedLeft)||isAborted(parsedRight))return INVALID;const merged=mergeValues(parsedLeft.value,parsedRight.value);return merged.valid?((isDirty(parsedLeft)||isDirty(parsedRight))&&status.dirty(),{status:status.value,value:merged.data}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_intersection_types}),INVALID)},"handleParsed");return ctx.common.async?Promise.all([this._def.left._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseAsync({data:ctx.data,path:ctx.path,parent:ctx})]).then(([left,right])=>handleParsed(left,right)):handleParsed(this._def.left._parseSync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseSync({data:ctx.data,path:ctx.path,parent:ctx}))}};__name(_ZodIntersection,"ZodIntersection");let ZodIntersection=_ZodIntersection;ZodIntersection.create=(left,right,params)=>new ZodIntersection({left,right,typeName:ZodFirstPartyTypeKind.ZodIntersection,...processCreateParams(params)});const _ZodTuple=class _ZodTuple extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(ctx.data.length<this._def.items.length)return addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),INVALID;!this._def.rest&&ctx.data.length>this._def.items.length&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),status.dirty());const items=[...ctx.data].map((item,itemIndex)=>{const schema=this._def.items[itemIndex]||this._def.rest;return schema?schema._parse(new ParseInputLazyPath(ctx,item,ctx.path,itemIndex)):null}).filter(x=>!!x);return ctx.common.async?Promise.all(items).then(results=>ParseStatus.mergeArray(status,results)):ParseStatus.mergeArray(status,items)}get items(){return this._def.items}rest(rest){return new _ZodTuple({...this._def,rest})}};__name(_ZodTuple,"ZodTuple");let ZodTuple=_ZodTuple;ZodTuple.create=(schemas,params)=>{if(!Array.isArray(schemas))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:schemas,typeName:ZodFirstPartyTypeKind.ZodTuple,rest:null,...processCreateParams(params)})};const _ZodRecord=class _ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;const pairs=[],keyType=this._def.keyType,valueType=this._def.valueType;for(const key in ctx.data)pairs.push({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,key)),value:valueType._parse(new ParseInputLazyPath(ctx,ctx.data[key],ctx.path,key)),alwaysSet:key in ctx.data});return ctx.common.async?ParseStatus.mergeObjectAsync(status,pairs):ParseStatus.mergeObjectSync(status,pairs)}get element(){return this._def.valueType}static create(first,second,third){return second instanceof ZodType?new _ZodRecord({keyType:first,valueType:second,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(third)}):new _ZodRecord({keyType:ZodString.create(),valueType:first,typeName:ZodFirstPartyTypeKind.ZodRecord,...processCreateParams(second)})}};__name(_ZodRecord,"ZodRecord");let ZodRecord=_ZodRecord;const _ZodMap=class _ZodMap extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.map)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.map,received:ctx.parsedType}),INVALID;const keyType=this._def.keyType,valueType=this._def.valueType,pairs=[...ctx.data.entries()].map(([key,value],index)=>({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,[index,"key"])),value:valueType._parse(new ParseInputLazyPath(ctx,value,ctx.path,[index,"value"]))}));if(ctx.common.async){const finalMap=new Map;return Promise.resolve().then(async()=>{for(const pair of pairs){const key=await pair.key,value=await pair.value;if(key.status==="aborted"||value.status==="aborted")return INVALID;(key.status==="dirty"||value.status==="dirty")&&status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}})}else{const finalMap=new Map;for(const pair of pairs){const key=pair.key,value=pair.value;if(key.status==="aborted"||value.status==="aborted")return INVALID;(key.status==="dirty"||value.status==="dirty")&&status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}}}};__name(_ZodMap,"ZodMap");let ZodMap=_ZodMap;ZodMap.create=(keyType,valueType,params)=>new ZodMap({valueType,keyType,typeName:ZodFirstPartyTypeKind.ZodMap,...processCreateParams(params)});const _ZodSet=class _ZodSet extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.set)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.set,received:ctx.parsedType}),INVALID;const def=this._def;def.minSize!==null&&ctx.data.size<def.minSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minSize.value,type:"set",inclusive:!0,exact:!1,message:def.minSize.message}),status.dirty()),def.maxSize!==null&&ctx.data.size>def.maxSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxSize.value,type:"set",inclusive:!0,exact:!1,message:def.maxSize.message}),status.dirty());const valueType=this._def.valueType;function finalizeSet(elements2){const parsedSet=new Set;for(const element of elements2){if(element.status==="aborted")return INVALID;element.status==="dirty"&&status.dirty(),parsedSet.add(element.value)}return{status:status.value,value:parsedSet}}__name(finalizeSet,"finalizeSet");const elements=[...ctx.data.values()].map((item,i)=>valueType._parse(new ParseInputLazyPath(ctx,item,ctx.path,i)));return ctx.common.async?Promise.all(elements).then(elements2=>finalizeSet(elements2)):finalizeSet(elements)}min(minSize,message){return new _ZodSet({...this._def,minSize:{value:minSize,message:errorUtil.toString(message)}})}max(maxSize,message){return new _ZodSet({...this._def,maxSize:{value:maxSize,message:errorUtil.toString(message)}})}size(size,message){return this.min(size,message).max(size,message)}nonempty(message){return this.min(1,message)}};__name(_ZodSet,"ZodSet");let ZodSet=_ZodSet;ZodSet.create=(valueType,params)=>new ZodSet({valueType,minSize:null,maxSize:null,typeName:ZodFirstPartyTypeKind.ZodSet,...processCreateParams(params)});const _ZodLazy=class _ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(input){const{ctx}=this._processInputParams(input);return this._def.getter()._parse({data:ctx.data,path:ctx.path,parent:ctx})}};__name(_ZodLazy,"ZodLazy");let ZodLazy=_ZodLazy;ZodLazy.create=(getter,params)=>new ZodLazy({getter,typeName:ZodFirstPartyTypeKind.ZodLazy,...processCreateParams(params)});const _ZodLiteral=class _ZodLiteral extends ZodType{_parse(input){if(input.data!==this._def.value){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_literal,expected:this._def.value}),INVALID}return{status:"valid",value:input.data}}get value(){return this._def.value}};__name(_ZodLiteral,"ZodLiteral");let ZodLiteral=_ZodLiteral;ZodLiteral.create=(value,params)=>new ZodLiteral({value,typeName:ZodFirstPartyTypeKind.ZodLiteral,...processCreateParams(params)});function createZodEnum(values,params){return new ZodEnum({values,typeName:ZodFirstPartyTypeKind.ZodEnum,...processCreateParams(params)})}__name(createZodEnum,"createZodEnum");const _ZodEnum=class _ZodEnum extends ZodType{_parse(input){if(typeof input.data!="string"){const ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{expected:util.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(this._cache||(this._cache=new Set(this._def.values)),!this._cache.has(input.data)){const ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get options(){return this._def.values}get enum(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}get Values(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}get Enum(){const enumValues={};for(const val of this._def.values)enumValues[val]=val;return enumValues}extract(values,newDef=this._def){return _ZodEnum.create(values,{...this._def,...newDef})}exclude(values,newDef=this._def){return _ZodEnum.create(this.options.filter(opt=>!values.includes(opt)),{...this._def,...newDef})}};__name(_ZodEnum,"ZodEnum");let ZodEnum=_ZodEnum;ZodEnum.create=createZodEnum;const _ZodNativeEnum=class _ZodNativeEnum extends ZodType{_parse(input){const nativeEnumValues=util.getValidEnumValues(this._def.values),ctx=this._getOrReturnCtx(input);if(ctx.parsedType!==ZodParsedType.string&&ctx.parsedType!==ZodParsedType.number){const expectedValues=util.objectValues(nativeEnumValues);return addIssueToContext(ctx,{expected:util.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(this._cache||(this._cache=new Set(util.getValidEnumValues(this._def.values))),!this._cache.has(input.data)){const expectedValues=util.objectValues(nativeEnumValues);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues}),INVALID}return OK(input.data)}get enum(){return this._def.values}};__name(_ZodNativeEnum,"ZodNativeEnum");let ZodNativeEnum=_ZodNativeEnum;ZodNativeEnum.create=(values,params)=>new ZodNativeEnum({values,typeName:ZodFirstPartyTypeKind.ZodNativeEnum,...processCreateParams(params)});const _ZodPromise=class _ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(input){const{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.promise&&ctx.common.async===!1)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.promise,received:ctx.parsedType}),INVALID;const promisified=ctx.parsedType===ZodParsedType.promise?ctx.data:Promise.resolve(ctx.data);return OK(promisified.then(data=>this._def.type.parseAsync(data,{path:ctx.path,errorMap:ctx.common.contextualErrorMap})))}};__name(_ZodPromise,"ZodPromise");let ZodPromise=_ZodPromise;ZodPromise.create=(schema,params)=>new ZodPromise({type:schema,typeName:ZodFirstPartyTypeKind.ZodPromise,...processCreateParams(params)});const _ZodEffects=class _ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ZodFirstPartyTypeKind.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(input){const{status,ctx}=this._processInputParams(input),effect=this._def.effect||null,checkCtx={addIssue:__name(arg=>{addIssueToContext(ctx,arg),arg.fatal?status.abort():status.dirty()},"addIssue"),get path(){return ctx.path}};if(checkCtx.addIssue=checkCtx.addIssue.bind(checkCtx),effect.type==="preprocess"){const processed=effect.transform(ctx.data,checkCtx);if(ctx.common.async)return Promise.resolve(processed).then(async processed2=>{if(status.value==="aborted")return INVALID;const result=await this._def.schema._parseAsync({data:processed2,path:ctx.path,parent:ctx});return result.status==="aborted"?INVALID:result.status==="dirty"||status.value==="dirty"?DIRTY(result.value):result});{if(status.value==="aborted")return INVALID;const result=this._def.schema._parseSync({data:processed,path:ctx.path,parent:ctx});return result.status==="aborted"?INVALID:result.status==="dirty"||status.value==="dirty"?DIRTY(result.value):result}}if(effect.type==="refinement"){const executeRefinement=__name(acc=>{const result=effect.refinement(acc,checkCtx);if(ctx.common.async)return Promise.resolve(result);if(result instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return acc},"executeRefinement");if(ctx.common.async===!1){const inner=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return inner.status==="aborted"?INVALID:(inner.status==="dirty"&&status.dirty(),executeRefinement(inner.value),{status:status.value,value:inner.value})}else return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then(inner=>inner.status==="aborted"?INVALID:(inner.status==="dirty"&&status.dirty(),executeRefinement(inner.value).then(()=>({status:status.value,value:inner.value}))))}if(effect.type==="transform")if(ctx.common.async===!1){const base=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});if(!isValid(base))return INVALID;const result=effect.transform(base.value,checkCtx);if(result instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:status.value,value:result}}else return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then(base=>isValid(base)?Promise.resolve(effect.transform(base.value,checkCtx)).then(result=>({status:status.value,value:result})):INVALID);util.assertNever(effect)}};__name(_ZodEffects,"ZodEffects");let ZodEffects=_ZodEffects;ZodEffects.create=(schema,effect,params)=>new ZodEffects({schema,typeName:ZodFirstPartyTypeKind.ZodEffects,effect,...processCreateParams(params)});ZodEffects.createWithPreprocess=(preprocess,schema,params)=>new ZodEffects({schema,effect:{type:"preprocess",transform:preprocess},typeName:ZodFirstPartyTypeKind.ZodEffects,...processCreateParams(params)});const _ZodOptional=class _ZodOptional extends ZodType{_parse(input){return this._getType(input)===ZodParsedType.undefined?OK(void 0):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}};__name(_ZodOptional,"ZodOptional");let ZodOptional=_ZodOptional;ZodOptional.create=(type,params)=>new ZodOptional({innerType:type,typeName:ZodFirstPartyTypeKind.ZodOptional,...processCreateParams(params)});const _ZodNullable=class _ZodNullable extends ZodType{_parse(input){return this._getType(input)===ZodParsedType.null?OK(null):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}};__name(_ZodNullable,"ZodNullable");let ZodNullable=_ZodNullable;ZodNullable.create=(type,params)=>new ZodNullable({innerType:type,typeName:ZodFirstPartyTypeKind.ZodNullable,...processCreateParams(params)});const _ZodDefault=class _ZodDefault extends ZodType{_parse(input){const{ctx}=this._processInputParams(input);let data=ctx.data;return ctx.parsedType===ZodParsedType.undefined&&(data=this._def.defaultValue()),this._def.innerType._parse({data,path:ctx.path,parent:ctx})}removeDefault(){return this._def.innerType}};__name(_ZodDefault,"ZodDefault");let ZodDefault=_ZodDefault;ZodDefault.create=(type,params)=>new ZodDefault({innerType:type,typeName:ZodFirstPartyTypeKind.ZodDefault,defaultValue:typeof params.default=="function"?params.default:()=>params.default,...processCreateParams(params)});const _ZodCatch=class _ZodCatch extends ZodType{_parse(input){const{ctx}=this._processInputParams(input),newCtx={...ctx,common:{...ctx.common,issues:[]}},result=this._def.innerType._parse({data:newCtx.data,path:newCtx.path,parent:{...newCtx}});return isAsync(result)?result.then(result2=>({status:"valid",value:result2.status==="valid"?result2.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})})):{status:"valid",value:result.status==="valid"?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})}}removeCatch(){return this._def.innerType}};__name(_ZodCatch,"ZodCatch");let ZodCatch=_ZodCatch;ZodCatch.create=(type,params)=>new ZodCatch({innerType:type,typeName:ZodFirstPartyTypeKind.ZodCatch,catchValue:typeof params.catch=="function"?params.catch:()=>params.catch,...processCreateParams(params)});const _ZodNaN=class _ZodNaN extends ZodType{_parse(input){if(this._getType(input)!==ZodParsedType.nan){const ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.nan,received:ctx.parsedType}),INVALID}return{status:"valid",value:input.data}}};__name(_ZodNaN,"ZodNaN");let ZodNaN=_ZodNaN;ZodNaN.create=params=>new ZodNaN({typeName:ZodFirstPartyTypeKind.ZodNaN,...processCreateParams(params)});const _ZodBranded=class _ZodBranded extends ZodType{_parse(input){const{ctx}=this._processInputParams(input),data=ctx.data;return this._def.type._parse({data,path:ctx.path,parent:ctx})}unwrap(){return this._def.type}};__name(_ZodBranded,"ZodBranded");let ZodBranded=_ZodBranded;const _ZodPipeline=class _ZodPipeline extends ZodType{_parse(input){const{status,ctx}=this._processInputParams(input);if(ctx.common.async)return __name(async()=>{const inResult=await this._def.in._parseAsync({data:ctx.data,path:ctx.path,parent:ctx});return inResult.status==="aborted"?INVALID:inResult.status==="dirty"?(status.dirty(),DIRTY(inResult.value)):this._def.out._parseAsync({data:inResult.value,path:ctx.path,parent:ctx})},"handleAsync")();{const inResult=this._def.in._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return inResult.status==="aborted"?INVALID:inResult.status==="dirty"?(status.dirty(),{status:"dirty",value:inResult.value}):this._def.out._parseSync({data:inResult.value,path:ctx.path,parent:ctx})}}static create(a,b){return new _ZodPipeline({in:a,out:b,typeName:ZodFirstPartyTypeKind.ZodPipeline})}};__name(_ZodPipeline,"ZodPipeline");let ZodPipeline=_ZodPipeline;const _ZodReadonly=class _ZodReadonly extends ZodType{_parse(input){const result=this._def.innerType._parse(input),freeze=__name(data=>(isValid(data)&&(data.value=Object.freeze(data.value)),data),"freeze");return isAsync(result)?result.then(data=>freeze(data)):freeze(result)}unwrap(){return this._def.innerType}};__name(_ZodReadonly,"ZodReadonly");let ZodReadonly=_ZodReadonly;ZodReadonly.create=(type,params)=>new ZodReadonly({innerType:type,typeName:ZodFirstPartyTypeKind.ZodReadonly,...processCreateParams(params)});var ZodFirstPartyTypeKind;(function(ZodFirstPartyTypeKind2){ZodFirstPartyTypeKind2.ZodString="ZodString",ZodFirstPartyTypeKind2.ZodNumber="ZodNumber",ZodFirstPartyTypeKind2.ZodNaN="ZodNaN",ZodFirstPartyTypeKind2.ZodBigInt="ZodBigInt",ZodFirstPartyTypeKind2.ZodBoolean="ZodBoolean",ZodFirstPartyTypeKind2.ZodDate="ZodDate",ZodFirstPartyTypeKind2.ZodSymbol="ZodSymbol",ZodFirstPartyTypeKind2.ZodUndefined="ZodUndefined",ZodFirstPartyTypeKind2.ZodNull="ZodNull",ZodFirstPartyTypeKind2.ZodAny="ZodAny",ZodFirstPartyTypeKind2.ZodUnknown="ZodUnknown",ZodFirstPartyTypeKind2.ZodNever="ZodNever",ZodFirstPartyTypeKind2.ZodVoid="ZodVoid",ZodFirstPartyTypeKind2.ZodArray="ZodArray",ZodFirstPartyTypeKind2.ZodObject="ZodObject",ZodFirstPartyTypeKind2.ZodUnion="ZodUnion",ZodFirstPartyTypeKind2.ZodDiscriminatedUnion="ZodDiscriminatedUnion",ZodFirstPartyTypeKind2.ZodIntersection="ZodIntersection",ZodFirstPartyTypeKind2.ZodTuple="ZodTuple",ZodFirstPartyTypeKind2.ZodRecord="ZodRecord",ZodFirstPartyTypeKind2.ZodMap="ZodMap",ZodFirstPartyTypeKind2.ZodSet="ZodSet",ZodFirstPartyTypeKind2.ZodFunction="ZodFunction",ZodFirstPartyTypeKind2.ZodLazy="ZodLazy",ZodFirstPartyTypeKind2.ZodLiteral="ZodLiteral",ZodFirstPartyTypeKind2.ZodEnum="ZodEnum",ZodFirstPartyTypeKind2.ZodEffects="ZodEffects",ZodFirstPartyTypeKind2.ZodNativeEnum="ZodNativeEnum",ZodFirstPartyTypeKind2.ZodOptional="ZodOptional",ZodFirstPartyTypeKind2.ZodNullable="ZodNullable",ZodFirstPartyTypeKind2.ZodDefault="ZodDefault",ZodFirstPartyTypeKind2.ZodCatch="ZodCatch",ZodFirstPartyTypeKind2.ZodPromise="ZodPromise",ZodFirstPartyTypeKind2.ZodBranded="ZodBranded",ZodFirstPartyTypeKind2.ZodPipeline="ZodPipeline",ZodFirstPartyTypeKind2.ZodReadonly="ZodReadonly"})(ZodFirstPartyTypeKind||(ZodFirstPartyTypeKind={}));const stringType=ZodString.create,numberType=ZodNumber.create,booleanType=ZodBoolean.create,dateType=ZodDate.create,unknownType=ZodUnknown.create;ZodNever.create;const arrayType=ZodArray.create,objectType=ZodObject.create;ZodUnion.create;ZodIntersection.create;ZodTuple.create;const recordType=ZodRecord.create,literalType=ZodLiteral.create,enumType=ZodEnum.create;ZodPromise.create;ZodOptional.create;ZodNullable.create;objectType({error:stringType(),message:stringType().optional(),code:stringType().optional(),statusCode:numberType().optional()});objectType({success:literalType(!0),data:unknownType(),metadata:recordType(stringType(),unknownType()).optional()});objectType({items:arrayType(unknownType()),total:numberType(),page:numberType(),pageSize:numberType(),hasMore:booleanType()});enumType(["slack","whatsapp","email"]);objectType({id:stringType(),tenantId:stringType().uuid(),teamId:stringType(),teamName:stringType(),botUserId:stringType().optional(),botAccessToken:stringType(),createdAt:dateType(),updatedAt:dateType()});objectType({id:stringType(),workspaceId:stringType(),slackUserId:stringType(),userId:stringType().uuid().optional(),realName:stringType(),displayName:stringType(),email:stringType().email().optional(),avatar:stringType().url().optional(),isBot:booleanType(),createdAt:dateType(),updatedAt:dateType()});objectType({id:stringType(),tenantId:stringType().uuid(),phoneNumber:stringType(),verified:booleanType(),verificationCode:stringType().optional(),createdAt:dateType(),updatedAt:dateType()});const AddressSchema=objectType({id:stringType().uuid(),type:enumType(["registered","trading","billing","previous"]),line1:stringType().min(1,"Address line 1 is required"),line2:stringType().optional(),city:stringType().min(1,"City is required"),county:stringType().optional(),postcode:stringType().min(1,"Postcode is required"),country:stringType().min(2).max(2,"Country must be 2-letter ISO code"),isActive:booleanType().default(!0),validFrom:dateType().nullable(),validTo:dateType().nullable()}),VATRegistrationSchema=objectType({id:stringType().uuid(),number:stringType(),country:stringType().min(2).max(2),scheme:enumType(["standard","flat_rate","cash_accounting","annual_accounting"]),flatRatePercentage:numberType().min(0).max(100).optional(),isActive:booleanType().default(!0),validFrom:dateType().nullable(),validTo:dateType().nullable()}),CompanyRegistrationSchema=objectType({id:stringType().uuid(),number:stringType().min(1,"Registration number is required"),jurisdiction:stringType().min(1,"Jurisdiction is required"),type:enumType(["company_number","charity_number","partnership_number","other"]),validFrom:dateType().nullable(),validTo:dateType().nullable()}),TaxReferenceSchema=objectType({id:stringType().uuid(),type:enumType(["utr","paye","vat","corporation_tax","other"]),reference:stringType().min(1,"Reference is required"),description:stringType().optional()}),NameHistorySchema=objectType({id:stringType().uuid(),name:stringType().min(1,"Name is required"),type:enumType(["legal","trading","previous"]),validFrom:dateType().nullable(),validTo:dateType().nullable()}),VATSchemeHistorySchema=objectType({id:stringType().uuid(),scheme:enumType(["standard","flat_rate","cash_accounting","annual_accounting"]),flatRatePercentage:numberType().min(0).max(100).optional(),annualLimit:numberType().positive().optional(),validFrom:dateType().nullable(),validTo:dateType().nullable()});objectType({names:objectType({legal:stringType().min(1,"Legal name is required"),trading:arrayType(stringType().min(1)),previous:arrayType(NameHistorySchema),abbreviations:arrayType(stringType().min(1)),misspellings:arrayType(stringType().min(1)),groupName:stringType().optional()}),identifiers:objectType({vatNumbers:arrayType(VATRegistrationSchema),companyNumbers:arrayType(CompanyRegistrationSchema),taxReferences:arrayType(TaxReferenceSchema)}),addresses:objectType({registered:AddressSchema.nullable(),trading:arrayType(AddressSchema),billing:arrayType(AddressSchema),historical:arrayType(AddressSchema)}),matching:objectType({emailDomains:arrayType(stringType()),phoneNumbers:arrayType(stringType()),bankStatementNames:arrayType(stringType().min(1)),commonSuppliers:arrayType(stringType().min(1)),websites:arrayType(stringType().url())}),business:objectType({type:enumType(["limited_company","plc","llp","partnership","sole_trader","charity","community_interest_company","other"]),industrySectors:arrayType(stringType().min(1)),size:enumType(["micro","small","medium","large"]),incorporationDate:dateType().optional(),financialYearEnd:objectType({month:numberType().min(1).max(12),day:numberType().min(1).max(31)}),accountingMethod:enumType(["cash","accrual"]),defaultCurrency:stringType().length(3,"Currency code must be 3 characters")}),vat:objectType({isRegistered:booleanType(),schemes:arrayType(VATSchemeHistorySchema),taxYearBasis:enumType(["cash","accrual"]),mtdEnabled:booleanType(),ecSalesListRequired:booleanType()})});const euCountries=["AT","BE","BG","HR","CY","CZ","DK","EE","FI","FR","DE","GR","HU","IE","IT","LV","LT","LU","MT","NL","PL","PT","RO","SK","SI","ES","SE"],FileStatusSchema=enumType(["pending","processing","completed","failed"]),FileSchema=objectType({id:stringType().uuid(),tenantId:stringType().uuid(),fileName:stringType(),mimeType:stringType(),size:numberType(),pathTokens:arrayType(stringType()),uploadedBy:stringType().uuid(),status:FileStatusSchema,error:stringType().optional(),metadata:recordType(stringType(),unknownType()).optional(),createdAt:dateType(),updatedAt:dateType()}),FileGroupByYearSchema=objectType({year:stringType(),suppliers:recordType(stringType(),objectType({fileCount:numberType(),files:arrayType(FileSchema)}))});objectType({byYear:recordType(stringType(),FileGroupByYearSchema),totalFiles:numberType()});const TenantSchema=objectType({id:stringType().uuid(),name:stringType(),slug:stringType(),settings:recordType(stringType(),unknownType()).optional(),createdAt:dateType(),updatedAt:dateType()});objectType({id:stringType().uuid(),userId:stringType().uuid(),tenantId:stringType().uuid(),role:enumType(["owner","admin","member"]),lastAccessAt:dateType(),createdAt:dateType(),tenant:TenantSchema});objectType({id:stringType().uuid(),email:stringType().email(),name:stringType().optional(),avatarUrl:stringType().url().optional(),createdAt:dateType(),updatedAt:dateType()});const SlackEventTypeSchema=enumType(["message","app_mention","file_shared","url_verification"]),SlackEventSchema=objectType({type:SlackEventTypeSchema,user:stringType(),text:stringType().optional(),ts:stringType(),channel:stringType(),thread_ts:stringType().optional(),files:arrayType(objectType({id:stringType(),name:stringType(),mimetype:stringType(),size:numberType()})).optional()});objectType({type:stringType(),token:stringType().optional(),team_id:stringType(),event:SlackEventSchema.optional(),challenge:stringType().optional()});objectType({From:stringType(),To:stringType(),Body:stringType().optional(),MediaUrl0:stringType().url().optional(),MediaContentType0:stringType().optional(),NumMedia:stringType().optional(),MessageSid:stringType()});const _hoisted_1={class:"min-h-screen bg-neutral-50"},_hoisted_2={class:"mb-8"},_hoisted_3={key:0,class:"space-y-4"},_hoisted_4={key:2,class:"space-y-8"},_hoisted_5={class:"space-y-6"},_hoisted_6={class:"grid grid-cols-1 md:grid-cols-2 gap-6"},_hoisted_7=["value"],_hoisted_8={class:"space-y-6"},_hoisted_9={class:"space-y-2"},_hoisted_10={class:"grid grid-cols-1 md:grid-cols-2 gap-6"},_hoisted_11={key:0,class:"mt-2 flex flex-wrap gap-2"},_hoisted_12={key:0,class:"mt-2 flex flex-wrap gap-2"},_hoisted_13={class:"space-y-6"},_hoisted_14={class:"flex items-center justify-between p-4 bg-gray-50 rounded-lg"},_hoisted_15={class:"space-y-4 border-t pt-4"},_hoisted_16={class:"grid grid-cols-1 md:grid-cols-2 gap-4"},_hoisted_17=["value"],_hoisted_18={class:"flex justify-end"},_hoisted_19={class:"grid grid-cols-1 md:grid-cols-2 gap-6 border-t pt-4"},_hoisted_20={class:"flex items-center justify-between"},_hoisted_21={class:"flex items-center justify-between"},_hoisted_22={class:"space-y-6"},_hoisted_23={class:"grid grid-cols-1 md:grid-cols-2 gap-6"},_hoisted_24=["value"],_hoisted_25=["value"],_hoisted_26=["value"],_hoisted_27={class:"grid grid-cols-2 gap-2"},_hoisted_28=["value"],_hoisted_29=["value"],_hoisted_30={class:"fixed bottom-4 right-4 z-50"},_hoisted_31={key:0,class:"bg-white rounded-lg shadow-lg border border-gray-200 p-3"},_hoisted_32={key:0,class:"flex items-center gap-2 text-yellow-600"},_hoisted_33={key:1,class:"flex items-center gap-2 text-green-600"},_hoisted_34={key:2,class:"flex items-center gap-2 text-red-600"},_sfc_main=defineComponent({__name:"company",setup(__props){const router=useRouter(),$trpc=useTrpc(),tenantStore=useTenantStore(),toast=useToast(),isLoading=ref(!0),error=ref(null),saveStatus=ref("idle"),validationErrors=reactive({}),abbreviationsInput=ref(""),misspellingsInput=ref(""),formState=ref({names:{legal:"",trading:[],previous:[],abbreviations:[],misspellings:[]},identifiers:{vatNumbers:[],companyNumbers:[],taxReferences:[]},addresses:{registered:null,trading:[],billing:[],historical:[]},matching:{emailDomains:[],phoneNumbers:[],bankStatementNames:[],commonSuppliers:[],websites:[]},business:{type:"limited_company",industrySectors:[],size:"small",financialYearEnd:{month:3,day:31},accountingMethod:"accrual",defaultCurrency:"GBP"},vat:{isRegistered:!1,schemes:[],taxYearBasis:"accrual",mtdEnabled:!1,ecSalesListRequired:!1}}),companyTypes=[{value:"limited_company",label:"Limited Company"},{value:"plc",label:"Public Limited Company"},{value:"llp",label:"Limited Liability Partnership"},{value:"partnership",label:"Partnership"},{value:"sole_trader",label:"Sole Trader"},{value:"charity",label:"Charity"},{value:"community_interest_company",label:"Community Interest Company"},{value:"other",label:"Other"}],companySizes=[{value:"micro",label:"Micro (< 10 employees)"},{value:"small",label:"Small (10-49 employees)"},{value:"medium",label:"Medium (50-249 employees)"},{value:"large",label:"Large (250+ employees)"}],currencies=[{value:"GBP",label:"GBP - British Pound"},{value:"EUR",label:"EUR - Euro"},{value:"USD",label:"USD - US Dollar"}],accountingMethods=[{value:"cash",label:"Cash Basis"},{value:"accrual",label:"Accrual Basis"}],months=[{value:1,label:"January"},{value:2,label:"February"},{value:3,label:"March"},{value:4,label:"April"},{value:5,label:"May"},{value:6,label:"June"},{value:7,label:"July"},{value:8,label:"August"},{value:9,label:"September"},{value:10,label:"October"},{value:11,label:"November"},{value:12,label:"December"}],days=Array.from({length:31},(_,i)=>i+1),euCountryOptions=euCountries.map(code=>({value:code,label:code}));async function loadConfiguration(){if(!tenantStore.selectedTenantId){error.value=new Error("No tenant selected"),isLoading.value=!1;return}try{isLoading.value=!0,error.value=null;const config=await $trpc.tenant.getCompanyConfig.query();formState.value={names:{legal:config.names?.legal||"",trading:config.names?.trading||[],previous:config.names?.previous||[],abbreviations:config.names?.abbreviations||[],misspellings:config.names?.misspellings||[],groupName:config.names?.groupName},identifiers:{vatNumbers:config.identifiers?.vatNumbers||[],companyNumbers:config.identifiers?.companyNumbers||[],taxReferences:config.identifiers?.taxReferences||[]},addresses:{registered:config.addresses?.registered||null,trading:config.addresses?.trading||[],billing:config.addresses?.billing||[],historical:config.addresses?.historical||[]},matching:{emailDomains:config.matching?.emailDomains||[],phoneNumbers:config.matching?.phoneNumbers||[],bankStatementNames:config.matching?.bankStatementNames||[],commonSuppliers:config.matching?.commonSuppliers||[],websites:config.matching?.websites||[]},business:{type:config.business?.type||"limited_company",industrySectors:config.business?.industrySectors||[],size:config.business?.size||"small",financialYearEnd:config.business?.financialYearEnd||{month:3,day:31},accountingMethod:config.business?.accountingMethod||"accrual",defaultCurrency:config.business?.defaultCurrency||"GBP",incorporationDate:config.business?.incorporationDate},vat:{isRegistered:config.vat?.isRegistered||!1,schemes:config.vat?.schemes||[],taxYearBasis:config.vat?.taxYearBasis||"accrual",mtdEnabled:config.vat?.mtdEnabled||!1,ecSalesListRequired:config.vat?.ecSalesListRequired||!1}}}catch(e){error.value=e,toast.add({title:"Error",description:e.message||"Failed to load company configuration",color:"error"})}finally{isLoading.value=!1}}__name(loadConfiguration,"loadConfiguration");const saveField=useDebounceFn(async _field=>{if(formState.value.names.legal)try{saveStatus.value="saving",await $trpc.tenant.updateCompanyConfig.mutate(formState.value),saveStatus.value="saved",setTimeout(()=>{saveStatus.value==="saved"&&(saveStatus.value="idle")},2e3)}catch(e){saveStatus.value="error",toast.add({title:"Failed to save",description:e.message||"An error occurred while saving",color:"error"}),setTimeout(()=>{saveStatus.value==="error"&&(saveStatus.value="idle")},3e3)}},1e3);function addTradingName(){formState.value.names.trading.push(""),saveField("names")}__name(addTradingName,"addTradingName");function removeTradingName(index){formState.value.names.trading.splice(index,1),saveField("names")}__name(removeTradingName,"removeTradingName");function addAbbreviation(){abbreviationsInput.value.trim()&&(formState.value.names.abbreviations.push(abbreviationsInput.value.trim()),abbreviationsInput.value="",saveField("names"))}__name(addAbbreviation,"addAbbreviation");function removeAbbreviation(index){formState.value.names.abbreviations.splice(index,1),saveField("names")}__name(removeAbbreviation,"removeAbbreviation");function addMisspelling(){misspellingsInput.value.trim()&&(formState.value.names.misspellings.push(misspellingsInput.value.trim()),misspellingsInput.value="",saveField("names"))}__name(addMisspelling,"addMisspelling");function removeMisspelling(index){formState.value.names.misspellings.splice(index,1),saveField("names")}__name(removeMisspelling,"removeMisspelling");function addVATRegistration(){formState.value.identifiers.vatNumbers.push({number:"",country:"GB",scheme:"standard",isActive:!0,validFrom:null,validTo:null})}__name(addVATRegistration,"addVATRegistration");function removeVATRegistration(index){formState.value.identifiers.vatNumbers.splice(index,1),saveField("identifiers")}return __name(removeVATRegistration,"removeVATRegistration"),onMounted(async()=>{tenantStore.selectedTenantId||await tenantStore.fetchUserTenants(),loadConfiguration()}),watch(()=>tenantStore.selectedTenantId,()=>{loadConfiguration()}),(_ctx,_cache)=>(openBlock(),createElementBlock(Fragment,null,[createBaseVNode("div",_hoisted_1,[createVNode(unref(_sfc_main$a),{"max-width":"6xl",class:"py-8"},{default:withCtx(()=>[createBaseVNode("div",_hoisted_2,[createVNode(unref(_sfc_main$1),{variant:"ghost",color:"neutral",size:"sm",onClick:_cache[0]||(_cache[0]=$event=>unref(router).push("/settings")),class:"mb-4"},{default:withCtx(()=>_cache[28]||(_cache[28]=[createBaseVNode("span",{class:"flex items-center gap-2"},[createBaseVNode("svg",{class:"h-4 w-4",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M15 19l-7-7 7-7"})]),createTextVNode(" Back to Settings ")],-1)])),_:1,__:[28]}),_cache[29]||(_cache[29]=createBaseVNode("h1",{class:"text-3xl font-bold text-gray-900"},"Company Settings",-1)),_cache[30]||(_cache[30]=createBaseVNode("p",{class:"mt-2 text-gray-600"}," Manage your company information and preferences ",-1)),_cache[31]||(_cache[31]=createBaseVNode("div",{class:"mt-4 flex items-center gap-2 text-sm text-gray-500"},[createBaseVNode("svg",{class:"h-4 w-4",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"})]),createBaseVNode("span",null,"Changes are saved automatically as you type")],-1))]),isLoading.value?(openBlock(),createElementBlock("div",_hoisted_3,[createVNode(unref(_sfc_main$2),{height:"xl"}),createVNode(unref(_sfc_main$2),{height:"h-96"})])):error.value?(openBlock(),createBlock(unref(_sfc_main$3),{key:1,color:"error",variant:"subtle",title:"Error loading configuration",description:error.value?.message||"An unknown error occurred"},null,8,["description"])):(openBlock(),createElementBlock("form",_hoisted_4,[createVNode(unref(_sfc_main$4),null,{default:withCtx(()=>[createBaseVNode("div",_hoisted_5,[createBaseVNode("div",null,[_cache[33]||(_cache[33]=createBaseVNode("h3",{class:"text-lg font-semibold mb-4"},"Essential Information",-1)),createBaseVNode("div",_hoisted_6,[createVNode(unref(_sfc_main$5),{label:"Legal Company Name",required:"",error:validationErrors.legal},{default:withCtx(()=>[createVNode(unref(_sfc_main$6),{modelValue:formState.value.names.legal,"onUpdate:modelValue":_cache[1]||(_cache[1]=$event=>formState.value.names.legal=$event),placeholder:"ABC Limited",size:"lg",onBlur:_cache[2]||(_cache[2]=$event=>unref(saveField)("names"))},null,8,["modelValue"])]),_:1},8,["error"]),createVNode(unref(_sfc_main$5),{label:"Company Type",required:"",error:validationErrors.type},{default:withCtx(()=>[createVNode(unref(_sfc_main$7),{modelValue:formState.value.business.type,"onUpdate:modelValue":_cache[3]||(_cache[3]=$event=>formState.value.business.type=$event),size:"lg",simple:"",onChange:_cache[4]||(_cache[4]=$event=>unref(saveField)("business"))},{default:withCtx(()=>[_cache[32]||(_cache[32]=createBaseVNode("option",{value:""},"Select type",-1)),(openBlock(),createElementBlock(Fragment,null,renderList(companyTypes,type=>createBaseVNode("option",{key:type.value,value:type.value},toDisplayString(type.label),9,_hoisted_7)),64))]),_:1,__:[32]},8,["modelValue"])]),_:1},8,["error"])])])])]),_:1}),createVNode(unref(_sfc_main$4),{header:"Company Details"},{header:withCtx(()=>_cache[34]||(_cache[34]=[createBaseVNode("div",null,[createBaseVNode("h3",{class:"text-lg font-semibold"},"Company Details"),createBaseVNode("p",{class:"text-sm text-gray-500 mt-1"},"Trading names, abbreviations, and variations")],-1)])),default:withCtx(()=>[createBaseVNode("div",_hoisted_8,[createBaseVNode("div",null,[createVNode(unref(_sfc_main$5),{label:"Trading Names",description:"Names your company trades under"},{default:withCtx(()=>[createBaseVNode("div",_hoisted_9,[(openBlock(!0),createElementBlock(Fragment,null,renderList(formState.value.names.trading,(_,index)=>(openBlock(),createElementBlock("div",{key:`trading-${index}`,class:"flex items-center gap-2"},[createVNode(unref(_sfc_main$6),{modelValue:formState.value.names.trading[index],"onUpdate:modelValue":__name($event=>formState.value.names.trading[index]=$event,"onUpdate:modelValue"),placeholder:"Enter trading name",size:"md",class:"flex-1",onBlur:_cache[5]||(_cache[5]=$event=>unref(saveField)("names"))},null,8,["modelValue","onUpdate:modelValue"]),createVNode(unref(_sfc_main$1),{color:"error",variant:"ghost",size:"sm",onClick:__name($event=>removeTradingName(index),"onClick")},{default:withCtx(()=>_cache[35]||(_cache[35]=[createBaseVNode("svg",{class:"h-4 w-4",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"})],-1)])),_:2,__:[35]},1032,["onClick"])]))),128)),createVNode(unref(_sfc_main$1),{variant:"soft",onClick:addTradingName,size:"sm"},{default:withCtx(()=>_cache[36]||(_cache[36]=[createBaseVNode("span",{class:"flex items-center gap-2"},[createBaseVNode("svg",{class:"h-4 w-4",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M12 4v16m8-8H4"})]),createTextVNode(" Add Trading Name ")],-1)])),_:1,__:[36]})])]),_:1})]),createBaseVNode("div",_hoisted_10,[createVNode(unref(_sfc_main$5),{label:"Common Abbreviations",description:"e.g., ABC, ABC Ltd"},{default:withCtx(()=>[createVNode(unref(_sfc_main$6),{modelValue:abbreviationsInput.value,"onUpdate:modelValue":_cache[6]||(_cache[6]=$event=>abbreviationsInput.value=$event),placeholder:"ABC Ltd",size:"md",onKeydown:withKeys(withModifiers(addAbbreviation,["prevent"]),["enter"])},null,8,["modelValue","onKeydown"]),formState.value.names.abbreviations.length?(openBlock(),createElementBlock("div",_hoisted_11,[(openBlock(!0),createElementBlock(Fragment,null,renderList(formState.value.names.abbreviations,(abbr,index)=>(openBlock(),createBlock(unref(_sfc_main$8),{key:index,color:"neutral",variant:"solid",class:"cursor-pointer group",onClick:__name($event=>removeAbbreviation(index),"onClick")},{default:withCtx(()=>[createTextVNode(toDisplayString(abbr)+" ",1),_cache[37]||(_cache[37]=createBaseVNode("svg",{class:"ml-1 h-3 w-3 opacity-60 group-hover:opacity-100",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M6 18L18 6M6 6l12 12"})],-1))]),_:2,__:[37]},1032,["onClick"]))),128))])):createCommentVNode("",!0)]),_:1}),createVNode(unref(_sfc_main$5),{label:"Common Misspellings",description:"Help AI recognise typos"},{default:withCtx(()=>[createVNode(unref(_sfc_main$6),{modelValue:misspellingsInput.value,"onUpdate:modelValue":_cache[7]||(_cache[7]=$event=>misspellingsInput.value=$event),placeholder:"Vepler, Veplar",size:"md",onKeydown:withKeys(withModifiers(addMisspelling,["prevent"]),["enter"])},null,8,["modelValue","onKeydown"]),formState.value.names.misspellings.length?(openBlock(),createElementBlock("div",_hoisted_12,[(openBlock(!0),createElementBlock(Fragment,null,renderList(formState.value.names.misspellings,(spell,index)=>(openBlock(),createBlock(unref(_sfc_main$8),{key:index,color:"neutral",variant:"solid",class:"cursor-pointer group",onClick:__name($event=>removeMisspelling(index),"onClick")},{default:withCtx(()=>[createTextVNode(toDisplayString(spell)+" ",1),_cache[38]||(_cache[38]=createBaseVNode("svg",{class:"ml-1 h-3 w-3 opacity-60 group-hover:opacity-100",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M6 18L18 6M6 6l12 12"})],-1))]),_:2,__:[38]},1032,["onClick"]))),128))])):createCommentVNode("",!0)]),_:1})])])]),_:1}),createVNode(unref(_sfc_main$4),null,{header:withCtx(()=>_cache[39]||(_cache[39]=[createBaseVNode("div",null,[createBaseVNode("h3",{class:"text-lg font-semibold"},"Addresses"),createBaseVNode("p",{class:"text-sm text-gray-500 mt-1"},"Registered and trading addresses")],-1)])),default:withCtx(()=>[createVNode(AddressSection,{addresses:formState.value.addresses,"onUpdate:addresses":[_cache[8]||(_cache[8]=$event=>formState.value.addresses=$event),_cache[9]||(_cache[9]=$event=>unref(saveField)("addresses"))]},null,8,["addresses"])]),_:1}),createVNode(unref(_sfc_main$4),null,{header:withCtx(()=>_cache[40]||(_cache[40]=[createBaseVNode("div",null,[createBaseVNode("h3",{class:"text-lg font-semibold"},"VAT & Tax Configuration"),createBaseVNode("p",{class:"text-sm text-gray-500 mt-1"},"VAT registration and tax settings")],-1)])),default:withCtx(()=>[createBaseVNode("div",_hoisted_13,[createBaseVNode("div",_hoisted_14,[_cache[41]||(_cache[41]=createBaseVNode("div",{class:"space-y-1"},[createBaseVNode("label",{class:"text-sm font-medium text-gray-900"},"VAT Registered"),createBaseVNode("p",{class:"text-sm text-gray-500"}," Is your company registered for VAT? ")],-1)),createVNode(unref(_sfc_main$9),{modelValue:formState.value.vat.isRegistered,"onUpdate:modelValue":_cache[10]||(_cache[10]=$event=>formState.value.vat.isRegistered=$event),onChange:_cache[11]||(_cache[11]=$event=>unref(saveField)("vat"))},null,8,["modelValue"])]),formState.value.vat.isRegistered?(openBlock(),createElementBlock(Fragment,{key:0},[createBaseVNode("div",_hoisted_15,[_cache[45]||(_cache[45]=createBaseVNode("h4",{class:"font-medium text-gray-900"},"VAT Registrations",-1)),(openBlock(!0),createElementBlock(Fragment,null,renderList(formState.value.identifiers.vatNumbers,(vat,index)=>(openBlock(),createElementBlock("div",{key:index,class:"p-4 bg-gray-50 rounded-lg space-y-4"},[createBaseVNode("div",_hoisted_16,[createVNode(unref(_sfc_main$5),{label:"VAT Number"},{default:withCtx(()=>[createVNode(unref(_sfc_main$6),{modelValue:vat.number,"onUpdate:modelValue":__name($event=>vat.number=$event,"onUpdate:modelValue"),placeholder:"GB123456789",size:"md",onBlur:_cache[12]||(_cache[12]=$event=>unref(saveField)("identifiers"))},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024),createVNode(unref(_sfc_main$5),{label:"Country"},{default:withCtx(()=>[createVNode(unref(_sfc_main$7),{modelValue:vat.country,"onUpdate:modelValue":__name($event=>vat.country=$event,"onUpdate:modelValue"),size:"md",simple:"",onChange:_cache[13]||(_cache[13]=$event=>unref(saveField)("identifiers"))},{default:withCtx(()=>[_cache[42]||(_cache[42]=createBaseVNode("option",{value:""},"Select country",-1)),(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(euCountryOptions),country=>(openBlock(),createElementBlock("option",{key:country.value,value:country.value},toDisplayString(country.label),9,_hoisted_17))),128))]),_:2,__:[42]},1032,["modelValue","onUpdate:modelValue"])]),_:2},1024)]),createBaseVNode("div",_hoisted_18,[createVNode(unref(_sfc_main$1),{color:"error",variant:"soft",size:"sm",onClick:__name($event=>removeVATRegistration(index),"onClick")},{default:withCtx(()=>_cache[43]||(_cache[43]=[createBaseVNode("span",{class:"flex items-center gap-2"},[createBaseVNode("svg",{class:"h-4 w-4",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"})]),createTextVNode(" Remove ")],-1)])),_:2,__:[43]},1032,["onClick"])])]))),128)),createVNode(unref(_sfc_main$1),{variant:"soft",onClick:addVATRegistration,size:"sm"},{default:withCtx(()=>_cache[44]||(_cache[44]=[createBaseVNode("span",{class:"flex items-center gap-2"},[createBaseVNode("svg",{class:"h-4 w-4",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M12 4v16m8-8H4"})]),createTextVNode(" Add VAT Registration ")],-1)])),_:1,__:[44]})]),createBaseVNode("div",_hoisted_19,[createBaseVNode("div",_hoisted_20,[createVNode(unref(_sfc_main$5),{label:"Making Tax Digital",description:"MTD compliance enabled"}),createVNode(unref(_sfc_main$9),{modelValue:formState.value.vat.mtdEnabled,"onUpdate:modelValue":_cache[14]||(_cache[14]=$event=>formState.value.vat.mtdEnabled=$event),onChange:_cache[15]||(_cache[15]=$event=>unref(saveField)("vat"))},null,8,["modelValue"])]),createBaseVNode("div",_hoisted_21,[createVNode(unref(_sfc_main$5),{label:"EC Sales List",description:"Submit EC sales lists"}),createVNode(unref(_sfc_main$9),{modelValue:formState.value.vat.ecSalesListRequired,"onUpdate:modelValue":_cache[16]||(_cache[16]=$event=>formState.value.vat.ecSalesListRequired=$event),onChange:_cache[17]||(_cache[17]=$event=>unref(saveField)("vat"))},null,8,["modelValue"])])])],64)):createCommentVNode("",!0)])]),_:1}),createVNode(unref(_sfc_main$4),null,{header:withCtx(()=>_cache[46]||(_cache[46]=[createBaseVNode("div",null,[createBaseVNode("h3",{class:"text-lg font-semibold"},"Business Information"),createBaseVNode("p",{class:"text-sm text-gray-500 mt-1"},"Company structure and financial details")],-1)])),default:withCtx(()=>[createBaseVNode("div",_hoisted_22,[createBaseVNode("div",_hoisted_23,[createVNode(unref(_sfc_main$5),{label:"Company Size",description:"Number of employees in your organisation"},{default:withCtx(()=>[createVNode(unref(_sfc_main$7),{modelValue:formState.value.business.size,"onUpdate:modelValue":_cache[18]||(_cache[18]=$event=>formState.value.business.size=$event),size:"md",simple:"",onChange:_cache[19]||(_cache[19]=$event=>unref(saveField)("business"))},{default:withCtx(()=>[_cache[47]||(_cache[47]=createBaseVNode("option",{value:""},"Select company size",-1)),(openBlock(),createElementBlock(Fragment,null,renderList(companySizes,size=>createBaseVNode("option",{key:size.value,value:size.value},toDisplayString(size.label),9,_hoisted_24)),64))]),_:1,__:[47]},8,["modelValue"])]),_:1}),createVNode(unref(_sfc_main$5),{label:"Default Currency",description:"Primary currency for transactions"},{default:withCtx(()=>[createVNode(unref(_sfc_main$7),{modelValue:formState.value.business.defaultCurrency,"onUpdate:modelValue":_cache[20]||(_cache[20]=$event=>formState.value.business.defaultCurrency=$event),size:"md",simple:"",onChange:_cache[21]||(_cache[21]=$event=>unref(saveField)("business"))},{default:withCtx(()=>[_cache[48]||(_cache[48]=createBaseVNode("option",{value:""},"Select currency",-1)),(openBlock(),createElementBlock(Fragment,null,renderList(currencies,currency=>createBaseVNode("option",{key:currency.value,value:currency.value},toDisplayString(currency.label),9,_hoisted_25)),64))]),_:1,__:[48]},8,["modelValue"])]),_:1}),createVNode(unref(_sfc_main$5),{label:"Accounting Method",description:"How you record income and expenses"},{default:withCtx(()=>[createVNode(unref(_sfc_main$7),{modelValue:formState.value.business.accountingMethod,"onUpdate:modelValue":_cache[22]||(_cache[22]=$event=>formState.value.business.accountingMethod=$event),size:"md",simple:"",onChange:_cache[23]||(_cache[23]=$event=>unref(saveField)("business"))},{default:withCtx(()=>[_cache[49]||(_cache[49]=createBaseVNode("option",{value:""},"Select method",-1)),(openBlock(),createElementBlock(Fragment,null,renderList(accountingMethods,method=>createBaseVNode("option",{key:method.value,value:method.value},toDisplayString(method.label),9,_hoisted_26)),64))]),_:1,__:[49]},8,["modelValue"])]),_:1}),createVNode(unref(_sfc_main$5),{label:"Financial Year End",description:"Last day of your financial year"},{default:withCtx(()=>[createBaseVNode("div",_hoisted_27,[createBaseVNode("div",null,[_cache[51]||(_cache[51]=createBaseVNode("label",{class:"block text-xs text-gray-500 mb-1"},"Day",-1)),createVNode(unref(_sfc_main$7),{modelValue:formState.value.business.financialYearEnd.day,"onUpdate:modelValue":_cache[24]||(_cache[24]=$event=>formState.value.business.financialYearEnd.day=$event),size:"md",simple:"",onChange:_cache[25]||(_cache[25]=$event=>unref(saveField)("business"))},{default:withCtx(()=>[_cache[50]||(_cache[50]=createBaseVNode("option",{value:""},"Day",-1)),(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(days),day=>(openBlock(),createElementBlock("option",{key:day,value:day},toDisplayString(day),9,_hoisted_28))),128))]),_:1,__:[50]},8,["modelValue"])]),createBaseVNode("div",null,[_cache[53]||(_cache[53]=createBaseVNode("label",{class:"block text-xs text-gray-500 mb-1"},"Month",-1)),createVNode(unref(_sfc_main$7),{modelValue:formState.value.business.financialYearEnd.month,"onUpdate:modelValue":_cache[26]||(_cache[26]=$event=>formState.value.business.financialYearEnd.month=$event),size:"md",simple:"",onChange:_cache[27]||(_cache[27]=$event=>unref(saveField)("business"))},{default:withCtx(()=>[_cache[52]||(_cache[52]=createBaseVNode("option",{value:""},"Month",-1)),(openBlock(),createElementBlock(Fragment,null,renderList(months,month=>createBaseVNode("option",{key:month.value,value:month.value},toDisplayString(month.label),9,_hoisted_29)),64))]),_:1,__:[52]},8,["modelValue"])])])]),_:1})])])]),_:1})]))]),_:1})]),createBaseVNode("div",_hoisted_30,[createVNode(Transition,{"enter-active-class":"transition ease-out duration-200","enter-from-class":"opacity-0 translate-y-1","enter-to-class":"opacity-100 translate-y-0","leave-active-class":"transition ease-in duration-150","leave-from-class":"opacity-100 translate-y-0","leave-to-class":"opacity-0 translate-y-1"},{default:withCtx(()=>[saveStatus.value!=="idle"?(openBlock(),createElementBlock("div",_hoisted_31,[saveStatus.value==="saving"?(openBlock(),createElementBlock("div",_hoisted_32,_cache[54]||(_cache[54]=[createBaseVNode("svg",{class:"animate-spin h-5 w-5",fill:"none",viewBox:"0 0 24 24"},[createBaseVNode("circle",{class:"opacity-25",cx:"12",cy:"12",r:"10",stroke:"currentColor","stroke-width":"4"}),createBaseVNode("path",{class:"opacity-75",fill:"currentColor",d:"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"})],-1),createBaseVNode("span",{class:"font-medium"},"Saving changes...",-1)]))):saveStatus.value==="saved"?(openBlock(),createElementBlock("div",_hoisted_33,_cache[55]||(_cache[55]=[createBaseVNode("svg",{class:"h-5 w-5",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"})],-1),createBaseVNode("span",{class:"font-medium"},"Changes saved",-1)]))):saveStatus.value==="error"?(openBlock(),createElementBlock("div",_hoisted_34,_cache[56]||(_cache[56]=[createBaseVNode("svg",{class:"h-5 w-5",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},[createBaseVNode("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"})],-1),createBaseVNode("span",{class:"font-medium"},"Error saving changes",-1)]))):createCommentVNode("",!0)])):createCommentVNode("",!0)]),_:1})])],64))}});export{_sfc_main as default};
