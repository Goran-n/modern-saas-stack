var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{b as useRouter,j as useNuxtApp,G as onNuxtReady,H as requestIdleCallback,I as cancelIdleCallback,J as parseQuery,K as resolveRouteObject,L as preloadRouteComponents,n as navigateTo,M as joinURL,g as useRuntimeConfig,N as hasProtocol,O as withTrailingSlash,P as withoutTrailingSlash,Q as nuxtLinkDefaults}from"./BGn8T2aB.js";import{z as defineComponent,l as shallowRef,f as ref,A as onMounted,o as onBeforeUnmount,m as h,a7 as resolveComponent,E as computed}from"./BRSJK7Xo.js";const firstNonUndefined=__name((...args)=>args.find(arg=>arg!==void 0),"firstNonUndefined");function defineNuxtLink(options){const componentName=options.componentName||"NuxtLink";function isHashLinkWithoutHashMode(link){return typeof link=="string"&&link.startsWith("#")}__name(isHashLinkWithoutHashMode,"isHashLinkWithoutHashMode");function resolveTrailingSlashBehavior(to,resolve,trailingSlash){const effectiveTrailingSlash=trailingSlash??options.trailingSlash;if(!to||effectiveTrailingSlash!=="append"&&effectiveTrailingSlash!=="remove")return to;if(typeof to=="string")return applyTrailingSlashBehavior(to,effectiveTrailingSlash);const path="path"in to&&to.path!==void 0?to.path:resolve(to).path;return{...to,name:void 0,path:applyTrailingSlashBehavior(path,effectiveTrailingSlash)}}__name(resolveTrailingSlashBehavior,"resolveTrailingSlashBehavior");function useNuxtLink(props){const router=useRouter(),config=useRuntimeConfig(),hasTarget=computed(()=>!!props.target&&props.target!=="_self"),isAbsoluteUrl=computed(()=>{const path=props.to||props.href||"";return typeof path=="string"&&hasProtocol(path,{acceptRelative:!0})}),builtinRouterLink=resolveComponent("RouterLink"),useBuiltinLink=builtinRouterLink&&typeof builtinRouterLink!="string"?builtinRouterLink.useLink:void 0,isExternal=computed(()=>{if(props.external)return!0;const path=props.to||props.href||"";return typeof path=="object"?!1:path===""||isAbsoluteUrl.value}),to=computed(()=>{const path=props.to||props.href||"";return isExternal.value?path:resolveTrailingSlashBehavior(path,router.resolve,props.trailingSlash)}),link=isExternal.value?void 0:useBuiltinLink?.({...props,to}),href=computed(()=>{const effectiveTrailingSlash=props.trailingSlash??options.trailingSlash;if(!to.value||isAbsoluteUrl.value||isHashLinkWithoutHashMode(to.value))return to.value;if(isExternal.value){const path=typeof to.value=="object"&&"path"in to.value?resolveRouteObject(to.value):to.value,href2=typeof path=="object"?router.resolve(path).href:path;return applyTrailingSlashBehavior(href2,effectiveTrailingSlash)}return typeof to.value=="object"?router.resolve(to.value)?.href??null:applyTrailingSlashBehavior(joinURL(config.app.baseURL,to.value),effectiveTrailingSlash)});return{to,hasTarget,isAbsoluteUrl,isExternal,href,isActive:link?.isActive??computed(()=>to.value===router.currentRoute.value.path),isExactActive:link?.isExactActive??computed(()=>to.value===router.currentRoute.value.path),route:link?.route??computed(()=>router.resolve(to.value)),async navigate(_e){await navigateTo(href.value,{replace:props.replace,external:isExternal.value||hasTarget.value})}}}return __name(useNuxtLink,"useNuxtLink"),defineComponent({name:componentName,props:{to:{type:[String,Object],default:void 0,required:!1},href:{type:[String,Object],default:void 0,required:!1},target:{type:String,default:void 0,required:!1},rel:{type:String,default:void 0,required:!1},noRel:{type:Boolean,default:void 0,required:!1},prefetch:{type:Boolean,default:void 0,required:!1},prefetchOn:{type:[String,Object],default:void 0,required:!1},noPrefetch:{type:Boolean,default:void 0,required:!1},activeClass:{type:String,default:void 0,required:!1},exactActiveClass:{type:String,default:void 0,required:!1},prefetchedClass:{type:String,default:void 0,required:!1},replace:{type:Boolean,default:void 0,required:!1},ariaCurrentValue:{type:String,default:void 0,required:!1},external:{type:Boolean,default:void 0,required:!1},custom:{type:Boolean,default:void 0,required:!1},trailingSlash:{type:String,default:void 0,required:!1}},useLink:useNuxtLink,setup(props,{slots}){const router=useRouter(),{to,href,navigate,isExternal,hasTarget,isAbsoluteUrl}=useNuxtLink(props),prefetched=shallowRef(!1),el=ref(null),elRef=__name(ref2=>{el.value=props.custom?ref2?.$el?.nextElementSibling:ref2?.$el},"elRef");function shouldPrefetch(mode){return!prefetched.value&&(typeof props.prefetchOn=="string"?props.prefetchOn===mode:props.prefetchOn?.[mode]??options.prefetchOn?.[mode])&&(props.prefetch??options.prefetch)!==!1&&props.noPrefetch!==!0&&props.target!=="_blank"&&!isSlowConnection()}__name(shouldPrefetch,"shouldPrefetch");async function prefetch(nuxtApp=useNuxtApp()){if(prefetched.value)return;prefetched.value=!0;const path=typeof to.value=="string"?to.value:isExternal.value?resolveRouteObject(to.value):router.resolve(to.value).fullPath,normalizedPath=isExternal.value?new URL(path,window.location.href).href:path;await Promise.all([nuxtApp.hooks.callHook("link:prefetch",normalizedPath).catch(()=>{}),!isExternal.value&&!hasTarget.value&&preloadRouteComponents(to.value,router).catch(()=>{})])}if(__name(prefetch,"prefetch"),shouldPrefetch("visibility")){const nuxtApp=useNuxtApp();let idleId,unobserve=null;onMounted(()=>{const observer=useObserver();onNuxtReady(()=>{idleId=requestIdleCallback(()=>{el?.value?.tagName&&(unobserve=observer.observe(el.value,async()=>{unobserve?.(),unobserve=null,await prefetch(nuxtApp)}))})})}),onBeforeUnmount(()=>{idleId&&cancelIdleCallback(idleId),unobserve?.(),unobserve=null})}return()=>{if(!isExternal.value&&!hasTarget.value&&!isHashLinkWithoutHashMode(to.value)){const routerLinkProps={ref:elRef,to:to.value,activeClass:props.activeClass||options.activeClass,exactActiveClass:props.exactActiveClass||options.exactActiveClass,replace:props.replace,ariaCurrentValue:props.ariaCurrentValue,custom:props.custom};return props.custom||(shouldPrefetch("interaction")&&(routerLinkProps.onPointerenter=prefetch.bind(null,void 0),routerLinkProps.onFocus=prefetch.bind(null,void 0)),prefetched.value&&(routerLinkProps.class=props.prefetchedClass||options.prefetchedClass),routerLinkProps.rel=props.rel||void 0),h(resolveComponent("RouterLink"),routerLinkProps,slots.default)}const target=props.target||null,rel=firstNonUndefined(props.noRel?"":props.rel,options.externalRelAttribute,isAbsoluteUrl.value||hasTarget.value?"noopener noreferrer":"")||null;return props.custom?slots.default?slots.default({href:href.value,navigate,prefetch,get route(){if(!href.value)return;const url=new URL(href.value,window.location.href);return{path:url.pathname,fullPath:url.pathname,get query(){return parseQuery(url.search)},hash:url.hash,params:{},name:void 0,matched:[],redirectedFrom:void 0,meta:{},href:href.value}},rel,target,isExternal:isExternal.value||hasTarget.value,isActive:!1,isExactActive:!1}):null:h("a",{ref:el,href:href.value||null,rel,target,onClick:__name(event=>{if(!(isExternal.value||hasTarget.value))return event.preventDefault(),props.replace?router.replace(href.value):router.push(href.value)},"onClick")},slots.default?.())}}})}__name(defineNuxtLink,"defineNuxtLink");const __nuxt_component_0=defineNuxtLink(nuxtLinkDefaults);function applyTrailingSlashBehavior(to,trailingSlash){const normalizeFn=trailingSlash==="append"?withTrailingSlash:withoutTrailingSlash;return hasProtocol(to)&&!to.startsWith("http")?to:normalizeFn(to,!0)}__name(applyTrailingSlashBehavior,"applyTrailingSlashBehavior");function useObserver(){const nuxtApp=useNuxtApp();if(nuxtApp._observer)return nuxtApp._observer;let observer=null;const callbacks=new Map,observe=__name((element,callback)=>(observer||=new IntersectionObserver(entries=>{for(const entry of entries){const callback2=callbacks.get(entry.target);(entry.isIntersecting||entry.intersectionRatio>0)&&callback2&&callback2()}}),callbacks.set(element,callback),observer.observe(element),()=>{callbacks.delete(element),observer?.unobserve(element),callbacks.size===0&&(observer?.disconnect(),observer=null)}),"observe");return nuxtApp._observer={observe}}__name(useObserver,"useObserver");const IS_2G_RE=/2g/;function isSlowConnection(){const cn=navigator.connection;return!!(cn&&(cn.saveData||IS_2G_RE.test(cn.effectiveType)))}__name(isSlowConnection,"isSlowConnection");export{__nuxt_component_0 as _};
