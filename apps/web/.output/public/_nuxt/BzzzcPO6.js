var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{b as useRouter,c as useSupabaseClient}from"./BGn8T2aB.js";import{D as defineStore,f as ref,F as readonly}from"./BRSJK7Xo.js";const useAuthStore=defineStore("auth",()=>{const router=useRouter(),isLoading=ref(!1);async function signIn(email,password){try{isLoading.value=!0;const client=useSupabaseClient(),{data,error}=await client.auth.signInWithPassword({email,password});if(error)throw error;return data}finally{isLoading.value=!1}}__name(signIn,"signIn");async function signUp(email,password){try{isLoading.value=!0;const client=useSupabaseClient(),{data,error}=await client.auth.signUp({email,password});if(error)throw error;return data}finally{isLoading.value=!1}}__name(signUp,"signUp");async function signOut(){try{isLoading.value=!0;const client=useSupabaseClient(),{error}=await client.auth.signOut();if(error)throw error;await router.push("/auth/login")}finally{isLoading.value=!1}}__name(signOut,"signOut");async function resetPassword(email){try{isLoading.value=!0;const client=useSupabaseClient(),{error}=await client.auth.resetPasswordForEmail(email,{redirectTo:`${window.location.origin}/auth/reset-password`});if(error)throw error}finally{isLoading.value=!1}}__name(resetPassword,"resetPassword");async function updatePassword(newPassword){try{isLoading.value=!0;const client=useSupabaseClient(),{error}=await client.auth.updateUser({password:newPassword});if(error)throw error}finally{isLoading.value=!1}}return __name(updatePassword,"updatePassword"),{isLoading:readonly(isLoading),signIn,signUp,signOut,resetPassword,updatePassword}});export{useAuthStore as u};
